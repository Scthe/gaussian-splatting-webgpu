{
  "version": 3,
  "sources": ["../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/utils.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/vec2.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/vec3.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/vec2-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/mat3-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/vec3-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/mat4-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/quat.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/quat-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/vec4.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/vec4-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.0-2c5e303934-10c0.zip/node_modules/src/wgpu-matrix.ts", "../src/constants.ts", "../src/utils.ts", "../src/web/input.ts", "../src/passes/renderUniformsBuffer.ts", "../src/gaussianSplats.ts", "../src/passes/renderSplatsGEO.ts", "../src/passes/sortPassGPU/bitonicSort.ts", "../src/passes/sortPassGPU/calcDepths.ts", "../src/passes/sortPassGPU/unrollIndices.ts", "../src/passes/sortPassGPU/index.ts", "../src/passes/sortPassCPU.ts", "../src/passes/drawGroundPass.ts", "../src/web/camera2.ts", "../src/passes/sortPassCPU_Naive.ts", "../src/renderer.ts", "../src/loaders/fileSplat.ts", "../src/web/fpsStats.ts", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/toString.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/utils/common.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/interpret.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/math.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/Color.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/Controller.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/dom/dom.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/BooleanController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/OptionController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/StringController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/NumberController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/NumberControllerBox.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/NumberControllerSlider.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/FunctionController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/ColorController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/utils/css.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/gui/saveDialogue.html.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/ControllerFactory.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/utils/requestAnimationFrame.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/dom/CenteredDiv.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/gui/GUI.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/index.js", "../src/web/gui.ts", "../src/gpuProfiler.ts", "../src/web/cavasResize.ts", "../src/passes/renderSplatsGEO.wgsl", "../src/passes/sortPassGPU/bitonicSort.wgsl", "../src/passes/sortPassGPU/calcDepths.wgsl", "../src/passes/sortPassGPU/unrollIndices.wgsl", "../src/index.web.ts"],
  "sourcesContent": ["/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nexport let EPSILON = 0.000001;\n\n/**\n * Set the value for EPSILON for various checks\n * @param v - Value to use for EPSILON.\n * @returns previous value of EPSILON;\n */\nexport function setEpsilon(v: number): number {\n  const old = EPSILON;\n  EPSILON = v;\n  return old;\n}\n\n/**\n * Convert degrees to radians\n * @param degrees - Angle in degrees\n * @returns angle converted to radians\n */\nexport function degToRad(degrees: number): number {\n  return degrees * Math.PI / 180;\n}\n\n/**\n * Convert radians to degrees\n * @param radians - Angle in radians\n * @returns angle converted to degrees\n */\nexport function radToDeg(radians: number): number {\n  return radians * 180 / Math.PI;\n}\n\n/**\n * Lerps between a and b via t\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @returns a + (b - a) * t\n */\nexport function lerp(a: number, b: number, t: number): number {\n  return a + (b - a) * t;\n}\n\n/**\n * Compute the opposite of lerp. Given a and b and a value between\n * a and b returns a value between 0 and 1. 0 if a, 1 if b.\n * Note: no clamping is done.\n * @param a - start value\n * @param b - end value\n * @param v - value between a and b\n * @returns (v - a) / (b - a)\n */\nexport function inverseLerp(a: number, b: number, v: number): number {\n  const d = b - a;\n  return (Math.abs(b - a) < EPSILON)\n     ? a\n     : (v - a) / d;\n}\n\n/**\n * Compute the euclidean modulo\n *\n * ```\n * // table for n / 3\n * -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5   <- n\n * ------------------------------------\n * -2  -1  -0  -2  -1   0,  1,  2,  0,  1,  2   <- n % 3\n *  1   2   0   1   2   0,  1,  2,  0,  1,  2   <- euclideanModule(n, 3)\n * ```\n *\n * @param n - dividend\n * @param m - divisor\n * @returns the euclidean modulo of n / m\n */\nexport function euclideanModulo(n: number, m: number) {\n  return ((n % m) + m) % m;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 2 values, Float32Array with 2 values, or a Float64Array with 2 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link vec2.setDefaultType}.\n */\nexport type Vec2 = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Vec2 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec2. In other words you can do this\n *\n *     const v = vec2.cross(v1, v2);  // Creates a new Vec2 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec2.create();\n *     vec2.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec2.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let VecType: new (n: number) => Vec2 = Float32Array;\n\n/**\n * Sets the type this library creates for a Vec2\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec2\n */\nexport function setDefaultType(ctor: new (n: number) => Vec2) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values.\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Vec2's specified type\n * it would be faster to use\n *\n * ```\n * const v = vec2.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Vec2Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `vec2.create` is usually used\n * to create a Vec2 to be filled out as in\n *\n * ```\n * const sum = vec2.create();\n * vec2.add(v1, v2, sum);\n * ```\n *\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nexport function create(x = 0, y = 0): Vec2 {\n  const dst = new VecType(2);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n    }\n  }\n  return dst;\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 3 values, Float32Array with 3 values, or a Float64Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link vec3.setDefaultType}.\n */\nexport type Vec3 = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Vec3 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec3`. In other words you can do this\n *\n *     const v = vec3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec3.create();\n *     vec3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let VecType: new (n: number) => Vec3 = Float32Array;\n\n/**\n * Sets the type this library creates for a Vec3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec3\n */\nexport function setDefaultType(ctor: new (n: number) => Vec3) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nexport function create(x?: number, y?: number, z?: number): Vec3 {\n  const dst = new VecType(3);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n      if (z !== undefined) {\n        dst[2] = z;\n      }\n    }\n  }\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport { Vec2, create, setDefaultType, VecType } from './vec2';\nimport { Vec3, VecType as Vec3Type } from './vec3';\n\nexport default Vec2;\nexport { create, setDefaultType };\n\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Vec2\n * Also see {@link vec2.create} and {@link vec2.copy}\n *\n * @param x first value\n * @param y second value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  dst[0] = x;\n  dst[1] = y;\n\n  return dst;\n}\n\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nexport function ceil(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.ceil(v[0]);\n  dst[1] = Math.ceil(v[1]);\n\n  return dst;\n}\n\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nexport function floor(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.floor(v[0]);\n  dst[1] = Math.floor(v[1]);\n\n  return dst;\n}\n\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nexport function round(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.round(v[0]);\n  dst[1] = Math.round(v[1]);\n\n  return dst;\n}\n\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nexport function clamp(v: Vec2, min = 0, max = 1, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.min(max, Math.max(min, v[0]));\n  dst[1] = Math.min(max, Math.max(min, v[1]));\n\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nexport function add(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n\n  return dst;\n}\n\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nexport function addScaled(a: Vec2, b: Vec2, scale: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + b[0] * scale;\n  dst[1] = a[1] + b[1] * scale;\n\n  return dst;\n}\n\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nexport function angle(a: Vec2, b: Vec2): number {\n  const ax = a[0];\n  const ay = a[1];\n  const bx = b[0];\n  const by = b[1];\n  const mag1 = Math.sqrt(ax * ax + ay * ay);\n  const mag2 = Math.sqrt(bx * bx + by * by);\n  const mag = mag1 * mag2;\n  const cosine = mag && dot(a, b) / mag;\n  return Math.acos(cosine);\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport function subtract(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nexport function equalsApproximately(a: Vec2, b: Vec2): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nexport function equals(a: Vec2, b: Vec2): boolean {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Vec2, b: Vec2, t: number, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nexport function lerpV(a: Vec2, b: Vec2, t: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nexport function max(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nexport function min(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function mulScalar(v: Vec2, k: number, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function divScalar(v: Vec2, k: number, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n\n  return dst;\n}\n\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport function inverse(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = 1 / v[0];\n  dst[1] = 1 / v[1];\n\n  return dst;\n}\n\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport const invert = inverse;\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nexport function cross(a: Vec2, b: Vec2, dst?: Vec3): Vec3 {\n  dst = dst || new Vec3Type(3);\n  const z = a[0] * b[1] - a[1] * b[0];\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = z;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nexport function dot(a: Vec2, b: Vec2): number {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nexport function length(v: Vec2): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  return Math.sqrt(v0 * v0 + v1 * v1);\n}\n\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport function lengthSq(v: Vec2): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  return v0 * v0 + v1 * v1;\n}\n\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport function distance(a: Vec2, b: Vec2): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport const dist = distance;\n\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport function distanceSq(a: Vec2, b: Vec2): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport const distSq = distanceSq;\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nexport function normalize(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const len = Math.sqrt(v0 * v0 + v1 * v1);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nexport function negate(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n\n  return dst;\n}\n\n/**\n * Copies a vector. (same as {@link vec2.clone})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport function copy(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n\n  return dst;\n}\n\n/**\n * Clones a vector. (same as {@link vec2.copy})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport const clone = copy;\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport function multiply(a: Vec2, b: Vec2, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport function divide(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport const div = divide;\n\n/**\n * Creates a random unit vector * scale\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nexport function random(scale = 1, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const angle = Math.random() * 2 * Math.PI;\n  dst[0] = Math.cos(angle) * scale;\n  dst[1] = Math.sin(angle) * scale;\n\n  return dst;\n}\n\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nexport function zero(dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = 0;\n  dst[1] = 0;\n\n  return dst;\n}\n\n\n/**\n * transform Vec2 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat4(v: Vec2, m: Mat4, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const x = v[0];\n  const y = v[1];\n\n  dst[0] = x * m[0] + y * m[4] + m[12];\n  dst[1] = x * m[1] + y * m[5] + m[13];\n\n  return dst;\n}\n\n/**\n * Transforms vec4 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat3(v: Vec2, m: Mat3, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const x = v[0];\n  const y = v[1];\n\n  dst[0] = m[0] * x + m[4] * y + m[8];\n  dst[1] = m[1] * x + m[5] * y + m[9];\n\n  return dst;\n}\n\n/**\n * Rotate a 2D vector\n *\n * @param a The vec2 point to rotate\n * @param b The origin of the rotation\n * @param rad The angle of rotation in radians\n * @returns the rotated vector\n */\nexport function rotate(a: Vec2, b: Vec2, rad: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  // Translate point to the origin\n  const p0 = a[0] - b[0];\n  const p1 = a[1] - b[1];\n  const sinC = Math.sin(rad);\n  const cosC = Math.cos(rad);\n\n  //perform rotation and translate to correct position\n  dst[0] = p0 * cosC - p1 * sinC + b[0];\n  dst[1] = p0 * sinC + p1 * cosC + b[1];\n\n  return dst;\n}\n\n/**\n * Treat a 2D vector as a direction and set it's length\n *\n * @param a The vec2 to lengthen\n * @param len The length of the resulting vector\n * @returns The lengthened vector\n */\nexport function setLength(a: Vec2, len: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n  normalize(a, dst);\n  return mulScalar(dst, len, dst);\n}\n\n/**\n * Ensure a vector is not longer than a max length\n *\n * @param a The vec2 to limit\n * @param maxLen The longest length of the resulting vector\n * @returns The vector, shortened to maxLen if it's too long\n */\nexport function truncate(a: Vec2, maxLen: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  if (length(a) > maxLen) {\n    return setLength(a, maxLen, dst);\n  }\n\n  return copy(a, dst);\n}\n\n/**\n * Return the vector exactly between 2 endpoint vectors\n *\n * @param a Endpoint 1\n * @param b Endpoint 2\n * @returns The vector exactly residing between endpoints 1 and 2\n */\nexport function midpoint(a: Vec2, b: Vec2, dst?: Vec2) {\n  dst = dst || new VecType(2);\n  return lerp(a, b, 0.5, dst);\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as utils from './utils.js';\nimport { Quat } from './quat';\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport Vec2, * as vec2 from './vec2-impl';\n\nexport default Mat3;\n\nexport type Mat3LikeCtor = new (n: number) => Mat3;\n\n/**\n * 3x3 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat3.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat3.create();\n *     mat3.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat3.identity();\n *     const trans = mat3.translation([1, 2, 3]);\n *     mat3.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType: Mat3LikeCtor = Float32Array;\n\n// This mess is because with Mat3 we have 3 unused elements.\n// For Float32Array and Float64Array that's not an issue\n// but for Array it's troublesome\nconst ctorMap = new Map<Mat3LikeCtor,() => Mat3>([\n  [Float32Array, () => new Float32Array(12)],\n  [Float64Array, () => new Float64Array(12)],\n  [Array, () => new Array(12).fill(0)],\n]);\nlet newMat3: () => Mat3 = ctorMap.get(Float32Array)!;\n\n/**\n * Sets the type this library creates for a Mat3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat3\n */\nexport function setDefaultType(ctor: new (n: number) => Mat3) {\n  const oldType = MatType;\n  MatType = ctor;\n  newMat3 = ctorMap.get(ctor)!;\n  return oldType;\n}\n\n/**\n * Create a Mat3 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat3's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat3.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat3Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat3.create` is usually used\n * to create a Mat3 to be filled out as in\n *\n * ```\n * const m = mat3.create();\n * mat3.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @returns matrix created from values.\n */\nexport function create(\n    v0?: number, v1?: number, v2?: number,\n    v3?: number, v4?: number, v5?: number,\n    v6?: number, v7?: number, v8?: number): Mat3 {\n  const dst = newMat3();\n  // to make the array homogenous\n  dst[3] = 0;\n  dst[7] = 0;\n  dst[11] = 0;\n\n  if (v0 !== undefined) {\n    dst[0] = v0;\n    if (v1 !== undefined) {\n      dst[1] = v1;\n      if (v2 !== undefined) {\n        dst[2] = v2;\n        if (v3 !== undefined) {\n          dst[4] = v3;\n          if (v4 !== undefined) {\n            dst[5] = v4;\n            if (v5 !== undefined) {\n              dst[6] = v5;\n              if (v6 !== undefined) {\n                dst[8] = v6;\n                if (v7 !== undefined) {\n                  dst[9] = v7;\n                  if (v8 !== undefined) {\n                    dst[10] = v8;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Sets the values of a Mat3\n * Also see {@link mat3.create} and {@link mat3.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 set from values.\n */\nexport function set(\n    v0: number, v1: number, v2: number,\n    v3: number, v4: number, v5: number,\n    v6: number, v7: number, v8: number, dst?: Mat3) {\n  dst = dst || newMat3();\n\n  dst[0] = v0;  dst[1] = v1;  dst[ 2] = v2;  dst[ 3] = 0;\n  dst[4] = v3;  dst[5] = v4;  dst[ 6] = v5;  dst[ 7] = 0;\n  dst[8] = v6;  dst[9] = v7;  dst[10] = v8;  dst[11] = 0;\n\n  return dst;\n}\n\n/**\n * Creates a Mat3 from the upper left 3x3 part of a Mat4\n * @param m4 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from m4\n */\nexport function fromMat4(m4: Mat4, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n  dst[0] = m4[0];  dst[1] = m4[1];  dst[ 2] = m4[ 2];  dst[ 3] = 0;\n  dst[4] = m4[4];  dst[5] = m4[5];  dst[ 6] = m4[ 6];  dst[ 7] = 0;\n  dst[8] = m4[8];  dst[9] = m4[9];  dst[10] = m4[10];  dst[11] = 0;\n  return dst;\n}\n\n/**\n * Creates a Mat3 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from q\n */\nexport function fromQuat(q: Quat, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const x = q[0]; const y = q[1]; const z = q[2]; const w = q[3];\n  const x2 = x + x; const y2 = y + y; const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  dst[ 0] = 1 - yy - zz;  dst[ 1] = yx + wz;      dst[ 2] = zx - wy;      dst[ 3] = 0;\n  dst[ 4] = yx - wz;      dst[ 5] = 1 - xx - zz;  dst[ 6] = zy + wx;      dst[ 7] = 0;\n  dst[ 8] = zx + wy;      dst[ 9] = zy - wx;      dst[10] = 1 - xx - yy;  dst[11] = 0;\n\n  return dst;\n}\n\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nexport function negate(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = -m[ 0];  dst[ 1] = -m[ 1];  dst[ 2] = -m[ 2];\n  dst[ 4] = -m[ 4];  dst[ 5] = -m[ 5];  dst[ 6] = -m[ 6];\n  dst[ 8] = -m[ 8];  dst[ 9] = -m[ 9];  dst[10] = -m[10];\n\n  return dst;\n}\n\n/**\n * Copies a matrix. (same as {@link mat3.clone})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport function copy(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = m[ 0];  dst[ 1] = m[ 1];  dst[ 2] = m[ 2];\n  dst[ 4] = m[ 4];  dst[ 5] = m[ 5];  dst[ 6] = m[ 6];\n  dst[ 8] = m[ 8];  dst[ 9] = m[ 9];  dst[10] = m[10];\n\n  return dst;\n}\n\n/**\n * Copies a matrix (same as {@link mat3.copy})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport const clone = copy;\n\n/**\n * Check if 2 matrices are approximately equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are approximately equal\n */\nexport function equalsApproximately(a: Mat3, b: Mat3): boolean {\n  return Math.abs(a[ 0] - b[ 0]) < utils.EPSILON &&\n         Math.abs(a[ 1] - b[ 1]) < utils.EPSILON &&\n         Math.abs(a[ 2] - b[ 2]) < utils.EPSILON &&\n         Math.abs(a[ 4] - b[ 4]) < utils.EPSILON &&\n         Math.abs(a[ 5] - b[ 5]) < utils.EPSILON &&\n         Math.abs(a[ 6] - b[ 6]) < utils.EPSILON &&\n         Math.abs(a[ 8] - b[ 8]) < utils.EPSILON &&\n         Math.abs(a[ 9] - b[ 9]) < utils.EPSILON &&\n         Math.abs(a[10] - b[10]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 matrices are exactly equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are exactly equal\n */\nexport function equals(a: Mat3, b: Mat3): boolean {\n  return a[ 0] === b[ 0] &&\n         a[ 1] === b[ 1] &&\n         a[ 2] === b[ 2] &&\n         a[ 4] === b[ 4] &&\n         a[ 5] === b[ 5] &&\n         a[ 6] === b[ 6] &&\n         a[ 8] === b[ 8] &&\n         a[ 9] === b[ 9] &&\n         a[10] === b[10];\n}\n\n/**\n * Creates a 3-by-3 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 3-by-3 identity matrix.\n */\nexport function identity(dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = 1;  dst[ 1] = 0;  dst[ 2] = 0;\n  dst[ 4] = 0;  dst[ 5] = 1;  dst[ 6] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nexport function transpose(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n  if (dst === m) {\n    let t: number;\n\n    // 0 1 2\n    // 4 5 6\n    // 8 9 10\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  dst[ 0] = m00;  dst[ 1] = m10;  dst[ 2] = m20;\n  dst[ 4] = m01;  dst[ 5] = m11;  dst[ 6] = m21;\n  dst[ 8] = m02;  dst[ 9] = m12;  dst[10] = m22;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 3-by-3 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport function inverse(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  const b01 =  m22 * m11 - m12 * m21;\n  const b11 = -m22 * m10 + m12 * m20;\n  const b21 =  m21 * m10 - m11 * m20;\n\n  const invDet = 1 / (m00 * b01 + m01 * b11 + m02 * b21);\n\n  dst[ 0] = b01 * invDet;\n  dst[ 1] = (-m22 * m01 + m02 * m21) * invDet;\n  dst[ 2] = ( m12 * m01 - m02 * m11) * invDet;\n  dst[ 4] = b11 * invDet;\n  dst[ 5] = ( m22 * m00 - m02 * m20) * invDet;\n  dst[ 6] = (-m12 * m00 + m02 * m10) * invDet;\n  dst[ 8] = b21 * invDet;\n  dst[ 9] = (-m21 * m00 + m01 * m20) * invDet;\n  dst[10] = ( m11 * m00 - m01 * m10) * invDet;\n\n  return dst;\n}\n\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nexport function determinant(m: Mat3): number {\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  return m00 * (m11 * m22 - m21 * m12) -\n         m10 * (m01 * m22 - m21 * m02) +\n         m20 * (m01 * m12 - m11 * m02);\n}\n\n/**\n * Computes the inverse of a 3-by-3 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport const invert = inverse;\n\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport function multiply(a: Mat3, b: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\n  return dst;\n}\n\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Sets the translation component of a 3-by-3 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nexport function setTranslation(a: Mat3, v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n  }\n  dst[ 8] = v[0];\n  dst[ 9] = v[1];\n  dst[10] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 3-by-3 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nexport function getTranslation(m: Mat3, dst?: Vec2): Vec2 {\n  dst = dst || vec2.create();\n  dst[0] = m[8];\n  dst[1] = m[9];\n  return dst;\n}\n\n/**\n * Returns an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y,\n * @returns The axis component of m.\n */\nexport function getAxis(m: Mat3, axis: number, dst?: Vec2): Vec2 {\n  dst = dst || vec2.create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  return dst;\n}\n\n/**\n * Sets an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nexport function setAxis(m: Mat3, v: Vec2, axis: number, dst?: Mat3): Mat3 {\n  if (dst !== m) {\n    dst = copy(m, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  return dst;\n}\n\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nexport function getScaling(m: Mat3, dst?: Vec2): Vec2 {\n  dst = dst || vec2.create();\n\n  const xx = m[0];\n  const xy = m[1];\n  const yx = m[4];\n  const yy = m[5];\n\n  dst[0] = Math.sqrt(xx * xx + xy * xy);\n  dst[1] = Math.sqrt(yx * yx + yy * yy);\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which translates by the given vector v.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nexport function translation(v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = 1;     dst[ 1] = 0;     dst[ 2] = 0;\n  dst[ 4] = 0;     dst[ 5] = 1;     dst[ 6] = 0;\n  dst[ 8] = v[0];  dst[ 9] = v[1];  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Translates the given 3-by-3 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nexport function translate(m: Mat3, v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const v0 = v[0];\n  const v1 = v[1];\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n  }\n\n  dst[ 8] = m00 * v0 + m10 * v1 + m20;\n  dst[ 9] = m01 * v0 + m11 * v1 + m21;\n  dst[10] = m02 * v0 + m12 * v1 + m22;\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which rotates  by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotation(angleInRadians: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] =  c;  dst[ 1] = s;  dst[ 2] = 0;\n  dst[ 4] = -s;  dst[ 5] = c;  dst[ 6] = 0;\n  dst[ 8] =  0;  dst[ 9] = 0;  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 3-by-3 matrix  by the given angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotate(m: Mat3, angleInRadians: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     2 entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function scaling(v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = v[0];  dst[ 1] = 0;     dst[ 2] = 0;\n  dst[ 4] = 0;     dst[ 5] = v[1];  dst[ 6] = 0;\n  dst[ 8] = 0;     dst[ 9] = 0;     dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of 2 entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function scale(m: Mat3, v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const v0 = v[0];\n  const v1 = v[1];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which scales uniformly in each dimension\n * @param s - Amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function uniformScaling(s: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = s;  dst[ 1] = 0;  dst[ 2] = 0;\n  dst[ 4] = 0;  dst[ 5] = s;  dst[ 6] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given.\n * @param m - The matrix to be modified.\n * @param s - Amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function uniformScale(m: Mat3, s: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = s * m[0 * 4 + 0];\n  dst[ 1] = s * m[0 * 4 + 1];\n  dst[ 2] = s * m[0 * 4 + 2];\n\n  dst[ 4] = s * m[1 * 4 + 0];\n  dst[ 5] = s * m[1 * 4 + 1];\n  dst[ 6] = s * m[1 * 4 + 2];\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n  }\n\n  return dst;\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Vec3, create, setDefaultType, VecType } from './vec3';\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport { Quat } from './quat';\n\nexport default Vec3;\nexport { create, setDefaultType };\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Vec3\n * Also see {@link vec3.create} and {@link vec3.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, z: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  dst[0] = x;\n  dst[1] = y;\n  dst[2] = z;\n\n  return dst;\n}\n\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nexport function ceil(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.ceil(v[0]);\n  dst[1] = Math.ceil(v[1]);\n  dst[2] = Math.ceil(v[2]);\n\n  return dst;\n}\n\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nexport function floor(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.floor(v[0]);\n  dst[1] = Math.floor(v[1]);\n  dst[2] = Math.floor(v[2]);\n\n  return dst;\n}\n\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nexport function round(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.round(v[0]);\n  dst[1] = Math.round(v[1]);\n  dst[2] = Math.round(v[2]);\n\n  return dst;\n}\n\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nexport function clamp(v: Vec3, min = 0, max = 1, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(max, Math.max(min, v[0]));\n  dst[1] = Math.min(max, Math.max(min, v[1]));\n  dst[2] = Math.min(max, Math.max(min, v[2]));\n\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nexport function add(a: Vec3, b: Vec3, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nexport function addScaled(a: Vec3, b: Vec3, scale: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0] * scale;\n  dst[1] = a[1] + b[1] * scale;\n  dst[2] = a[2] + b[2] * scale;\n\n  return dst;\n}\n\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nexport function angle(a: Vec3, b: Vec3): number {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n  const mag = mag1 * mag2;\n  const cosine = mag && dot(a, b) / mag;\n  return Math.acos(cosine);\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport function subtract(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nexport function equalsApproximately(a: Vec3, b: Vec3): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON &&\n         Math.abs(a[2] - b[2]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nexport function equals(a: Vec3, b: Vec3): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Vec3, b: Vec3, t: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nexport function lerpV(a: Vec3, b: Vec3, t: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nexport function max(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nexport function min(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function mulScalar(v: Vec3, k: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function divScalar(v: Vec3, k: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport function inverse(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = 1 / v[0];\n  dst[1] = 1 / v[1];\n  dst[2] = 1 / v[2];\n\n  return dst;\n}\n\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport const invert = inverse;\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nexport function cross(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nexport function dot(a: Vec3, b: Vec3): number {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nexport function length(v: Vec3): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n}\n\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport function lengthSq(v: Vec3): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  return v0 * v0 + v1 * v1 + v2 * v2;\n}\n\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport function distance(a: Vec3, b: Vec3): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport const dist = distance;\n\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport function distanceSq(a: Vec3, b: Vec3): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport const distSq = distanceSq;\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nexport function normalize(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n    dst[2] = v2 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nexport function negate(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector. (same as {@link vec3.clone})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport function copy(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Clones a vector. (same as {@link vec3.copy})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport const clone = copy;\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport function multiply(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport function divide(a: Vec3, b: Vec3, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport const div = divide;\n\n/**\n * Creates a random vector\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nexport function random(scale = 1, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const angle = Math.random() * 2 * Math.PI;\n  const z = Math.random() * 2 - 1;\n  const zScale = Math.sqrt(1 - z * z) * scale;\n  dst[0] = Math.cos(angle) * zScale;\n  dst[1] = Math.sin(angle) * zScale;\n  dst[2] = z * scale;\n\n  return dst;\n}\n\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nexport function zero(dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = 0;\n\n  return dst;\n}\n\n\n/**\n * transform vec3 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat4(v: Vec3, m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n  const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1;\n\n  dst[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  dst[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  dst[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\n  return dst;\n}\n\n/**\n * Transform vec4 by upper 3x3 matrix inside 4x4 matrix.\n * @param v - The direction.\n * @param m - The matrix.\n * @param dst - optional Vec3 to store result. If not passed a new one is created.\n * @returns The transformed vector.\n */\nexport function transformMat4Upper3x3(v: Vec3, m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Transforms vec3 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat3(v: Vec3, m: Mat3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n\n  dst[0] = x * m[0] + y * m[4] + z * m[8];\n  dst[1] = x * m[1] + y * m[5] + z * m[9];\n  dst[2] = x * m[2] + y * m[6] + z * m[10];\n\n  return dst;\n}\n\n/**\n * Transforms vec3 by Quaternion\n * @param v - the vector to transform\n * @param q - the quaternion to transform by\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed\n */\nexport function transformQuat(v: Vec3, q: Quat, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const w2 = q[3] * 2;\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n\n  const uvX = qy * z - qz * y;\n  const uvY = qz * x - qx * z;\n  const uvZ = qx * y - qy * x;\n\n  dst[0] = x + uvX * w2 + (qy * uvZ - qz * uvY) * 2;\n  dst[1] = y + uvY * w2 + (qz * uvX - qx * uvZ) * 2;\n  dst[2] = z + uvZ * w2 + (qx * uvY - qy * uvX) * 2;\n\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nexport function getTranslation(m: Mat3, dst?: Vec3) {\n    dst = dst || new VecType(3);\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nexport function getAxis(m: Mat4, axis: number, dst?: Vec3) {\n    dst = dst || new VecType(3);\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nexport function getScaling(m: Mat4, dst: Vec3) {\n    dst = dst || new VecType(3);\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n *\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @param dst - The vector to set. If not passed a new one is created.\n * @returns the rotated vector\n */\nexport function rotateX(a: Vec3, b: Vec3, rad: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  const p = [];\n  const r = [];\n\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  dst[0] = r[0] + b[0];\n  dst[1] = r[1] + b[1];\n  dst[2] = r[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n *\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @param dst - The vector to set. If not passed a new one is created.\n * @returns the rotated vector\n */\nexport function rotateY(a: Vec3, b: Vec3, rad: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  const p = [];\n  const r = [];\n\n  // translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  // translate to correct position\n  dst[0] = r[0] + b[0];\n  dst[1] = r[1] + b[1];\n  dst[2] = r[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n *\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @param dst - The vector to set. If not passed a new one is created.\n * @returns {vec3} out\n */\nexport function rotateZ(a: Vec3, b: Vec3, rad: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  const p = [];\n  const r = [];\n\n  // translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  // translate to correct position\n  dst[0] = r[0] + b[0];\n  dst[1] = r[1] + b[1];\n  dst[2] = r[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Treat a 3D vector as a direction and set it's length\n *\n * @param a The vec3 to lengthen\n * @param len The length of the resulting vector\n * @returns The lengthened vector\n */\nexport function setLength(a: Vec3, len: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  normalize(a, dst);\n  return mulScalar(dst, len, dst);\n}\n\n/**\n * Ensure a vector is not longer than a max length\n *\n * @param a The vec3 to limit\n * @param maxLen The longest length of the resulting vector\n * @returns The vector, shortened to maxLen if it's too long\n */\nexport function truncate(a: Vec3, maxLen: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  if (length(a) > maxLen) {\n    return setLength(a, maxLen, dst);\n  }\n\n  return copy(a, dst);\n}\n\n/**\n * Return the vector exactly between 2 endpoint vectors\n *\n * @param a Endpoint 1\n * @param b Endpoint 2\n * @returns The vector exactly residing between endpoints 1 and 2\n */\nexport function midpoint(a: Vec3, b: Vec3, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  return lerp(a, b, 0.5, dst);\n}\n", "\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport { Quat } from './quat';\nimport Vec3, * as vec3 from './vec3-impl';\nimport * as utils from './utils';\n\nexport default Mat4;\n\nexport type Mat4LikeCtor = new (n: number) => Mat4;\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat4.create();\n *     mat4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat4.identity();\n *     const trans = mat4.translation([1, 2, 3]);\n *     mat4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType: Mat4LikeCtor = Float32Array;\n\n/**\n * Sets the type this library creates for a Mat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat4\n */\nexport function setDefaultType(ctor: new (n: number) => Mat4) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Create a Mat4 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat4's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat4.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat4Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat4.create` is usually used\n * to create a Mat4 to be filled out as in\n *\n * ```\n * const m = mat4.create();\n * mat4.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @returns created from values.\n */\nexport function create(\n    v0?: number, v1?: number, v2?: number, v3?: number,\n    v4?: number, v5?: number, v6?: number, v7?: number,\n    v8?: number, v9?: number, v10?: number, v11?: number,\n    v12?: number, v13?: number, v14?: number, v15?: number): Mat4 {\n  const dst = new MatType(16);\n  if (v0 !== undefined) {\n    dst[0] = v0;\n    if (v1 !== undefined) {\n      dst[1] = v1;\n      if (v2 !== undefined) {\n        dst[2] = v2;\n        if (v3 !== undefined) {\n          dst[3] = v3;\n          if (v4 !== undefined) {\n            dst[4] = v4;\n            if (v5 !== undefined) {\n              dst[5] = v5;\n              if (v6 !== undefined) {\n                dst[6] = v6;\n                if (v7 !== undefined) {\n                  dst[7] = v7;\n                  if (v8 !== undefined) {\n                    dst[8] = v8;\n                    if (v9 !== undefined) {\n                      dst[9] = v9;\n                      if (v10 !== undefined) {\n                        dst[10] = v10;\n                        if (v11 !== undefined) {\n                          dst[11] = v11;\n                          if (v12 !== undefined) {\n                            dst[12] = v12;\n                            if (v13 !== undefined) {\n                              dst[13] = v13;\n                              if (v14 !== undefined) {\n                                dst[14] = v14;\n                                if (v15 !== undefined) {\n                                  dst[15] = v15;\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return dst;\n}\n\n/**\n * Sets the values of a Mat4\n * Also see {@link mat4.create} and {@link mat4.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 created from values.\n */\nexport function set(\n    v0: number, v1: number, v2: number, v3: number,\n    v4: number, v5: number, v6: number, v7: number,\n    v8: number, v9: number, v10: number, v11: number,\n    v12: number, v13: number, v14: number, v15: number,\n    dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v0;   dst[ 1] = v1;   dst[ 2] = v2;   dst[ 3] = v3;\n  dst[ 4] = v4;   dst[ 5] = v5;   dst[ 6] = v6;   dst[ 7] = v7;\n  dst[ 8] = v8;   dst[ 9] = v9;   dst[10] = v10;  dst[11] = v11;\n  dst[12] = v12;  dst[13] = v13;  dst[14] = v14;  dst[15] = v15;\n\n  return dst;\n}\n\n/**\n * Creates a Mat4 from a Mat3\n * @param m3 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from m3\n */\nexport function fromMat3(m3: Mat3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m3[0];  dst[ 1] = m3[1];  dst[ 2] = m3[ 2];  dst[ 3] = 0;\n  dst[ 4] = m3[4];  dst[ 5] = m3[5];  dst[ 6] = m3[ 6];  dst[ 7] = 0;\n  dst[ 8] = m3[8];  dst[ 9] = m3[9];  dst[10] = m3[10];  dst[11] = 0;\n  dst[12] = 0;      dst[13] = 0;      dst[14] = 0;       dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a Mat4 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from q\n */\nexport function fromQuat(q: Quat, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const x = q[0]; const y = q[1]; const z = q[2]; const w = q[3];\n  const x2 = x + x; const y2 = y + y; const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  dst[ 0] = 1 - yy - zz;  dst[ 1] = yx + wz;      dst[ 2] = zx - wy;      dst[ 3] = 0;\n  dst[ 4] = yx - wz;      dst[ 5] = 1 - xx - zz;  dst[ 6] = zy + wx;      dst[ 7] = 0;\n  dst[ 8] = zx + wy;      dst[ 9] = zy - wx;      dst[10] = 1 - xx - yy;  dst[11] = 0;\n  dst[12] = 0;            dst[13] = 0;            dst[14] = 0;            dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nexport function negate(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];  dst[ 1] = -m[ 1];  dst[ 2] = -m[ 2];  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];  dst[ 5] = -m[ 5];  dst[ 6] = -m[ 6];  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];  dst[ 9] = -m[ 9];  dst[10] = -m[10];  dst[11] = -m[11];\n  dst[12] = -m[12];  dst[13] = -m[13];  dst[14] = -m[14];  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix. (same as {@link mat4.clone})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport function copy(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];  dst[ 1] = m[ 1];  dst[ 2] = m[ 2];  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];  dst[ 5] = m[ 5];  dst[ 6] = m[ 6];  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];  dst[ 9] = m[ 9];  dst[10] = m[10];  dst[11] = m[11];\n  dst[12] = m[12];  dst[13] = m[13];  dst[14] = m[14];  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix (same as {@link mat4.copy})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport const clone = copy;\n\n/**\n * Check if 2 matrices are approximately equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are approximately equal\n */\nexport function equalsApproximately(a: Mat4, b: Mat4): boolean {\n  return Math.abs(a[ 0] - b[ 0]) < utils.EPSILON &&\n         Math.abs(a[ 1] - b[ 1]) < utils.EPSILON &&\n         Math.abs(a[ 2] - b[ 2]) < utils.EPSILON &&\n         Math.abs(a[ 3] - b[ 3]) < utils.EPSILON &&\n         Math.abs(a[ 4] - b[ 4]) < utils.EPSILON &&\n         Math.abs(a[ 5] - b[ 5]) < utils.EPSILON &&\n         Math.abs(a[ 6] - b[ 6]) < utils.EPSILON &&\n         Math.abs(a[ 7] - b[ 7]) < utils.EPSILON &&\n         Math.abs(a[ 8] - b[ 8]) < utils.EPSILON &&\n         Math.abs(a[ 9] - b[ 9]) < utils.EPSILON &&\n         Math.abs(a[10] - b[10]) < utils.EPSILON &&\n         Math.abs(a[11] - b[11]) < utils.EPSILON &&\n         Math.abs(a[12] - b[12]) < utils.EPSILON &&\n         Math.abs(a[13] - b[13]) < utils.EPSILON &&\n         Math.abs(a[14] - b[14]) < utils.EPSILON &&\n         Math.abs(a[15] - b[15]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 matrices are exactly equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are exactly equal\n */\nexport function equals(a: Mat4, b: Mat4): boolean {\n  return a[ 0] === b[ 0] &&\n         a[ 1] === b[ 1] &&\n         a[ 2] === b[ 2] &&\n         a[ 3] === b[ 3] &&\n         a[ 4] === b[ 4] &&\n         a[ 5] === b[ 5] &&\n         a[ 6] === b[ 6] &&\n         a[ 7] === b[ 7] &&\n         a[ 8] === b[ 8] &&\n         a[ 9] === b[ 9] &&\n         a[10] === b[10] &&\n         a[11] === b[11] &&\n         a[12] === b[12] &&\n         a[13] === b[13] &&\n         a[14] === b[14] &&\n         a[15] === b[15];\n}\n\n/**\n * Creates a 4-by-4 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 4-by-4 identity matrix.\n */\nexport function identity(dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;  dst[ 1] = 0;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] = 1;  dst[ 6] = 0;  dst[ 7] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = 1;  dst[11] = 0;\n  dst[12] = 0;  dst[13] = 0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nexport function transpose(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;  dst[ 1] = m10;  dst[ 2] = m20;  dst[ 3] = m30;\n  dst[ 4] = m01;  dst[ 5] = m11;  dst[ 6] = m21;  dst[ 7] = m31;\n  dst[ 8] = m02;  dst[ 9] = m12;  dst[10] = m22;  dst[11] = m32;\n  dst[12] = m03;  dst[13] = m13;  dst[14] = m23;  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport function inverse(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp0  = m22 * m33;\n  const tmp1  = m32 * m23;\n  const tmp2  = m12 * m33;\n  const tmp3  = m32 * m13;\n  const tmp4  = m12 * m23;\n  const tmp5  = m22 * m13;\n  const tmp6  = m02 * m33;\n  const tmp7  = m32 * m03;\n  const tmp8  = m02 * m23;\n  const tmp9  = m22 * m03;\n  const tmp10 = m02 * m13;\n  const tmp11 = m12 * m03;\n  const tmp12 = m20 * m31;\n  const tmp13 = m30 * m21;\n  const tmp14 = m10 * m31;\n  const tmp15 = m30 * m11;\n  const tmp16 = m10 * m21;\n  const tmp17 = m20 * m11;\n  const tmp18 = m00 * m31;\n  const tmp19 = m30 * m01;\n  const tmp20 = m00 * m21;\n  const tmp21 = m20 * m01;\n  const tmp22 = m00 * m11;\n  const tmp23 = m10 * m01;\n\n  const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n      (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n  const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n      (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n  const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n      (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n  const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n      (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n\n  const d = 1 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp1 * m10 + tmp2 * m20 + tmp5 * m30) -\n          (tmp0 * m10 + tmp3 * m20 + tmp4 * m30));\n  dst[ 5] = d * ((tmp0 * m00 + tmp7 * m20 + tmp8 * m30) -\n          (tmp1 * m00 + tmp6 * m20 + tmp9 * m30));\n  dst[ 6] = d * ((tmp3 * m00 + tmp6 * m10 + tmp11 * m30) -\n          (tmp2 * m00 + tmp7 * m10 + tmp10 * m30));\n  dst[ 7] = d * ((tmp4 * m00 + tmp9 * m10 + tmp10 * m20) -\n          (tmp5 * m00 + tmp8 * m10 + tmp11 * m20));\n  dst[ 8] = d * ((tmp12 * m13 + tmp15 * m23 + tmp16 * m33) -\n          (tmp13 * m13 + tmp14 * m23 + tmp17 * m33));\n  dst[ 9] = d * ((tmp13 * m03 + tmp18 * m23 + tmp21 * m33) -\n          (tmp12 * m03 + tmp19 * m23 + tmp20 * m33));\n  dst[10] = d * ((tmp14 * m03 + tmp19 * m13 + tmp22 * m33) -\n          (tmp15 * m03 + tmp18 * m13 + tmp23 * m33));\n  dst[11] = d * ((tmp17 * m03 + tmp20 * m13 + tmp23 * m23) -\n          (tmp16 * m03 + tmp21 * m13 + tmp22 * m23));\n  dst[12] = d * ((tmp14 * m22 + tmp17 * m32 + tmp13 * m12) -\n          (tmp16 * m32 + tmp12 * m12 + tmp15 * m22));\n  dst[13] = d * ((tmp20 * m32 + tmp12 * m02 + tmp19 * m22) -\n          (tmp18 * m22 + tmp21 * m32 + tmp13 * m02));\n  dst[14] = d * ((tmp18 * m12 + tmp23 * m32 + tmp15 * m02) -\n          (tmp22 * m32 + tmp14 * m02 + tmp19 * m12));\n  dst[15] = d * ((tmp22 * m22 + tmp16 * m02 + tmp21 * m12) -\n          (tmp20 * m12 + tmp23 * m22 + tmp17 * m02));\n\n  return dst;\n}\n\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nexport function determinant(m: Mat4): number {\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  const tmp0  = m22 * m33;\n  const tmp1  = m32 * m23;\n  const tmp2  = m12 * m33;\n  const tmp3  = m32 * m13;\n  const tmp4  = m12 * m23;\n  const tmp5  = m22 * m13;\n  const tmp6  = m02 * m33;\n  const tmp7  = m32 * m03;\n  const tmp8  = m02 * m23;\n  const tmp9  = m22 * m03;\n  const tmp10 = m02 * m13;\n  const tmp11 = m12 * m03;\n\n  const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n             (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n  const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n             (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n  const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n             (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n  const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n             (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n\n  return m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport const invert = inverse;\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport function multiply(a: Mat4, b: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nexport function setTranslation(a: Mat4, v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nexport function getTranslation(m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || vec3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nexport function getAxis(m: Mat4, axis: number, dst?: Vec3): Vec3 {\n  dst = dst || vec3.create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y, 2 = z;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nexport function setAxis(m: Mat4, v: Vec3, axis: number, dst: Mat4): Mat4 {\n  if (dst !== m) {\n    dst = copy(m, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nexport function getScaling(m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || vec3.create();\n\n  const xx = m[0];\n  const xy = m[1];\n  const xz = m[2];\n  const yx = m[4];\n  const yy = m[5];\n  const yz = m[6];\n  const zx = m[8];\n  const zy = m[9];\n  const zz = m[10];\n\n  dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n  dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n  dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n *\n * Note: If you pass `Infinity` for zFar then it will produce a projection matrix\n * returns -Infinity for Z when transforming coordinates with Z <= 0 and +Infinity for Z\n * otherwise.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */\nexport function perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[15] = 0;\n\n  if (Number.isFinite(zFar)) {\n    const rangeInv = 1 / (zNear - zFar);\n    dst[10] = zFar * rangeInv;\n    dst[14] = zFar * zNear * rangeInv;\n  } else {\n    dst[10] = -1;\n    dst[14] = -zNear;\n  }\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 reverse-z perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 1 (at -zNear) to 0 (at -zFar) in the z dimension.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane. (default = Infinity)\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */export function perspectiveReverseZ(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar = Infinity, dst?: Mat4) {\n  dst = dst || new MatType(16);\n\n  const f = 1 / Math.tan(fieldOfViewYInRadians * 0.5);\n\n  dst[ 0] = f / aspect;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n\n  dst[ 4] = 0;\n  dst[ 5] = f;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[15] = 0;\n\n  if (zFar === Infinity) {\n    dst[10] = 0;\n    dst[14] = zNear;\n  } else {\n    const rangeInv = 1 / (zFar - zNear);\n    dst[10] = zNear * rangeInv;\n    dst[14] = zFar * zNear * rangeInv;\n  }\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix that transforms from\n * the given the left, right, bottom, and top dimensions to -1 +1 in x, and y\n * and 0 to +1 in z.\n * @param left - Left side of the near clipping plane viewport.\n * @param right - Right side of the near clipping plane viewport.\n * @param bottom - Bottom of the near clipping plane viewport.\n * @param top - Top of the near clipping plane viewport.\n * @param near - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param far - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The orthographic projection matrix.\n */\nexport function ortho(left: number, right: number, bottom: number, top: number, near: number, far: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 1 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = near / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nexport function frustum(left: number, right: number, bottom: number, top: number, near: number, far: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 reverse-z perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 1 (-near) to 0 (-far) in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nexport function frustumReverseZ(left: number, right: number, bottom: number, top: number, near: number, far = Infinity, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[15] = 0;\n\n  if (far === Infinity) {\n    dst[10] = 0;\n    dst[14] = near;\n  } else {\n    const rangeInv = 1 / (far - near);\n    dst[10] = near * rangeInv;\n    dst[14] = far * near * rangeInv;\n  }\n\n  return dst;\n}\n\nlet xAxis: Vec3;\nlet yAxis: Vec3;\nlet zAxis: Vec3;\n\n/**\n * Computes a 4-by-4 aim transformation.\n *\n * This is a matrix which positions an object aiming down positive Z.\n * toward the target.\n *\n * Note: this is **NOT** the inverse of lookAt as lookAt looks at negative Z.\n *\n * @param position - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nexport function aim(position: Vec3, target: Vec3, up: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || vec3.create();\n  yAxis = yAxis || vec3.create();\n  zAxis = zAxis || vec3.create();\n\n  vec3.normalize(vec3.subtract(target, position, zAxis), zAxis);\n  vec3.normalize(vec3.cross(up, zAxis, xAxis), xAxis);\n  vec3.normalize(vec3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];     dst[ 1] = xAxis[1];     dst[ 2] = xAxis[2];     dst[ 3] = 0;\n  dst[ 4] = yAxis[0];     dst[ 5] = yAxis[1];     dst[ 6] = yAxis[2];     dst[ 7] = 0;\n  dst[ 8] = zAxis[0];     dst[ 9] = zAxis[1];     dst[10] = zAxis[2];     dst[11] = 0;\n  dst[12] = position[0];  dst[13] = position[1];  dst[14] = position[2];  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 camera aim transformation.\n *\n * This is a matrix which positions an object aiming down negative Z.\n * toward the target.\n *\n * Note: this is the inverse of `lookAt`\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nexport function cameraAim(eye: Vec3, target: Vec3, up: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || vec3.create();\n  yAxis = yAxis || vec3.create();\n  zAxis = zAxis || vec3.create();\n\n  vec3.normalize(vec3.subtract(eye, target, zAxis), zAxis);\n  vec3.normalize(vec3.cross(up, zAxis, xAxis), xAxis);\n  vec3.normalize(vec3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];     dst[ 1] = xAxis[1];     dst[ 2] = xAxis[2];     dst[ 3] = 0;\n  dst[ 4] = yAxis[0];     dst[ 5] = yAxis[1];     dst[ 6] = yAxis[2];     dst[ 7] = 0;\n  dst[ 8] = zAxis[0];     dst[ 9] = zAxis[1];     dst[10] = zAxis[2];     dst[11] = 0;\n  dst[12] = eye[0];  dst[13] = eye[1];  dst[14] = eye[2];  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 view transformation.\n *\n * This is a view matrix which transforms all other objects\n * to be in the space of the view defined by the parameters.\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The look-at matrix.\n */\nexport function lookAt(eye: Vec3, target: Vec3, up: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || vec3.create();\n  yAxis = yAxis || vec3.create();\n  zAxis = zAxis || vec3.create();\n\n  vec3.normalize(vec3.subtract(eye, target, zAxis), zAxis);\n  vec3.normalize(vec3.cross(up, zAxis, xAxis), xAxis);\n  vec3.normalize(vec3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];  dst[ 1] = yAxis[0];  dst[ 2] = zAxis[0];  dst[ 3] = 0;\n  dst[ 4] = xAxis[1];  dst[ 5] = yAxis[1];  dst[ 6] = zAxis[1];  dst[ 7] = 0;\n  dst[ 8] = xAxis[2];  dst[ 9] = yAxis[2];  dst[10] = zAxis[2];  dst[11] = 0;\n\n  dst[12] = -(xAxis[0] * eye[0] + xAxis[1] * eye[1] + xAxis[2] * eye[2]);\n  dst[13] = -(yAxis[0] * eye[0] + yAxis[1] * eye[1] + yAxis[2] * eye[2]);\n  dst[14] = -(zAxis[0] * eye[0] + zAxis[1] * eye[1] + zAxis[2] * eye[2]);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nexport function translation(v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;     dst[ 1] = 0;     dst[ 2] = 0;     dst[ 3] = 0;\n  dst[ 4] = 0;     dst[ 5] = 1;     dst[ 6] = 0;     dst[ 7] = 0;\n  dst[ 8] = 0;     dst[ 9] = 0;     dst[10] = 1;     dst[11] = 0;\n  dst[12] = v[0];  dst[13] = v[1];  dst[14] = v[2];  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nexport function translate(m: Mat4, v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotationX(angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;  dst[ 1] =  0;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] =  c;  dst[ 6] = s;  dst[ 7] = 0;\n  dst[ 8] = 0;  dst[ 9] = -s;  dst[10] = c;  dst[11] = 0;\n  dst[12] = 0;  dst[13] =  0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotateX(m: Mat4, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotationY(angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;  dst[ 1] = 0;  dst[ 2] = -s;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] = 1;  dst[ 6] =  0;  dst[ 7] = 0;\n  dst[ 8] = s;  dst[ 9] = 0;  dst[10] =  c;  dst[11] = 0;\n  dst[12] = 0;  dst[13] = 0;  dst[14] =  0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotateY(m: Mat4, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotationZ(angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] =  c;  dst[ 1] = s;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = -s;  dst[ 5] = c;  dst[ 6] = 0;  dst[ 7] = 0;\n  dst[ 8] =  0;  dst[ 9] = 0;  dst[10] = 1;  dst[11] = 0;\n  dst[12] =  0;  dst[13] = 0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotateZ(m: Mat4, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nexport function axisRotation(axis: Vec3, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle. (same as axisRotation)\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nexport const rotation = axisRotation;\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function axisRotate(m: Mat4, axis: Vec3, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle. (same as rotate)\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport const rotate = axisRotate;\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function scaling(v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];  dst[ 1] = 0;     dst[ 2] = 0;     dst[ 3] = 0;\n  dst[ 4] = 0;     dst[ 5] = v[1];  dst[ 6] = 0;     dst[ 7] = 0;\n  dst[ 8] = 0;     dst[ 9] = 0;     dst[10] = v[2];  dst[11] = 0;\n  dst[12] = 0;     dst[13] = 0;     dst[14] = 0;     dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function scale(m: Mat4, v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales a uniform amount in each dimension.\n * @param s - the amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function uniformScaling(s: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = s;  dst[ 1] = 0;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] = s;  dst[ 6] = 0;  dst[ 7] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = s;  dst[11] = 0;\n  dst[12] = 0;  dst[13] = 0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by a uniform scale.\n * @param m - The matrix to be modified.\n * @param s - The amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function uniformScale(m: Mat4, s: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = s * m[0 * 4 + 0];\n  dst[ 1] = s * m[0 * 4 + 1];\n  dst[ 2] = s * m[0 * 4 + 2];\n  dst[ 3] = s * m[0 * 4 + 3];\n  dst[ 4] = s * m[1 * 4 + 0];\n  dst[ 5] = s * m[1 * 4 + 1];\n  dst[ 6] = s * m[1 * 4 + 2];\n  dst[ 7] = s * m[1 * 4 + 3];\n  dst[ 8] = s * m[2 * 4 + 0];\n  dst[ 9] = s * m[2 * 4 + 1];\n  dst[10] = s * m[2 * 4 + 2];\n  dst[11] = s * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 4 values, Float32Array with 4 values, or a Float64Array with 4 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link quat.setDefaultType}.\n */\nexport type Quat = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Quat4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Quat4`. In other words you can do this\n *\n *     const v = quat4.cross(v1, v2);  // Creates a new Quat4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = quat4.create();\n *     quat4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     quat4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let QuatType: new (n: number) => Quat = Float32Array;\n\n/**\n * Sets the type this library creates for a Quat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Quat4\n */\nexport function setDefaultType(ctor: new (n: number) => Quat) {\n  const oldType = QuatType;\n  QuatType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a quat4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nexport function create(x?: number, y?: number, z?: number, w?: number): Quat {\n  const dst = new QuatType(4);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n      if (z !== undefined) {\n        dst[2] = z;\n        if (w !== undefined) {\n          dst[3] = w;\n        }\n      }\n    }\n  }\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Quat, create, setDefaultType, QuatType } from './quat';\nimport { Mat3 } from './mat3.js';\nimport { Mat4 } from './mat4.js';\nimport { Vec3 } from './vec3.js';\nimport * as vec3 from './vec3-impl.js';\n\nexport type RotationOrder =  'xyz' |  'xzy' |  'yxz' |  'yzx' |  'zxy' |  'zyx';\n\nexport default Quat;\nexport { create, setDefaultType };\n\n/**\n * Creates a Quat; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Quat\n * Also see {@link quat.create} and {@link quat.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, z: number, w: number, dst?: Quat) {\n  dst = dst || new QuatType(4);\n\n  dst[0] = x;\n  dst[1] = y;\n  dst[2] = z;\n  dst[3] = w;\n\n  return dst;\n}\n\n/**\n * Sets a quaternion from the given angle and  axis,\n * then returns it.\n *\n * @param axis - the axis to rotate around\n * @param angleInRadians - the angle\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The quaternion that represents the given axis and angle\n **/\nexport function fromAxisAngle(axis: Vec3, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n  const s = Math.sin(halfAngle);\n\n  dst[0] = s * axis[0];\n  dst[1] = s * axis[1];\n  dst[2] = s * axis[2];\n  dst[3] = Math.cos(halfAngle);\n\n  return dst;\n}\n\n/**\n * Gets the rotation axis and angle\n * @param q - quaternion to compute from\n * @param dst - Vec3 to hold result. If not passed in a new one is created.\n * @return angle and axis\n */\nexport function toAxisAngle(q: Quat, dst?: Vec3): { angle: number, axis: Vec3 } {\n  dst = dst || vec3.create(4);\n\n  const angle = Math.acos(q[3]) * 2;\n  const s = Math.sin(angle * 0.5);\n  if (s > utils.EPSILON) {\n    dst[0] = q[0] / s;\n    dst[1] = q[1] / s;\n    dst[2] = q[2] / s;\n  } else {\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return { angle, axis: dst };\n}\n\n/**\n * Returns the angle in degrees between two rotations a and b.\n * @param a - quaternion a\n * @param b - quaternion b\n * @return angle in radians between the two quaternions\n */\nexport function angle(a: Quat, b: Quat) {\n  const d = dot(a, b);\n  return Math.acos(2 * d * d - 1);\n}\n\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function multiply(a: Quat, b: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n  const bw = b[3];\n\n  dst[0] = ax * bw + aw * bx + ay * bz - az * by;\n  dst[1] = ay * bw + aw * by + az * bx - ax * bz;\n  dst[2] = az * bw + aw * bz + ax * by - ay * bx;\n  dst[3] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return dst;\n}\n\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport const mul = multiply;\n\n/**\n * Rotates the given quaternion around the X axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function rotateX(q: Quat, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  const bx = Math.sin(halfAngle);\n  const bw = Math.cos(halfAngle);\n\n  dst[0] = qx * bw + qw * bx;\n  dst[1] = qy * bw + qz * bx;\n  dst[2] = qz * bw - qy * bx;\n  dst[3] = qw * bw - qx * bx;\n\n  return dst;\n}\n\n/**\n * Rotates the given quaternion around the Y axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function rotateY(q: Quat, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  const by = Math.sin(halfAngle);\n  const bw = Math.cos(halfAngle);\n\n  dst[0] = qx * bw - qz * by;\n  dst[1] = qy * bw + qw * by;\n  dst[2] = qz * bw + qx * by;\n  dst[3] = qw * bw - qy * by;\n\n  return dst;\n}\n\n/**\n * Rotates the given quaternion around the Z axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function rotateZ(q: Quat, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  const bz = Math.sin(halfAngle);\n  const bw = Math.cos(halfAngle);\n\n  dst[0] = qx * bw + qy * bz;\n  dst[1] = qy * bw - qx * bz;\n  dst[2] = qz * bw + qw * bz;\n  dst[3] = qw * bw - qz * bz;\n\n  return dst;\n}\n\n/**\n * Spherically linear interpolate between two quaternions\n *\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function slerp(a: Quat, b: Quat, t: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n\n  let bx = b[0];\n  let by = b[1];\n  let bz = b[2];\n  let bw = b[3];\n\n  let cosOmega = ax * bx + ay * by + az * bz + aw * bw;\n\n  if (cosOmega < 0) {\n    cosOmega = -cosOmega;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n\n  let scale0;\n  let scale1;\n\n  if (1.0 - cosOmega > utils.EPSILON) {\n    const omega = Math.acos(cosOmega);\n    const sinOmega = Math.sin(omega);\n    scale0 = Math.sin((1 - t) * omega) / sinOmega;\n    scale1 = Math.sin(t * omega) / sinOmega;\n  } else {\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n\n  dst[0] = scale0 * ax + scale1 * bx;\n  dst[1] = scale0 * ay + scale1 * by;\n  dst[2] = scale0 * az + scale1 * bz;\n  dst[3] = scale0 * aw + scale1 * bw;\n\n  return dst;\n}\n\n/**\n * Compute the inverse of a quaternion\n *\n * @param q - quaternion to compute the inverse of\n * @returns A quaternion that is the result of a * b\n */\nexport function inverse(q: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const a0 = q[0];\n  const a1 = q[1];\n  const a2 = q[2];\n  const a3 = q[3];\n\n  const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  const invDot = dot ? 1 / dot : 0;\n\n  dst[0] = -a0 * invDot;\n  dst[1] = -a1 * invDot;\n  dst[2] = -a2 * invDot;\n  dst[3] =  a3 * invDot;\n\n  return dst;\n}\n\n/**\n * Compute the conjugate of a quaternion\n * For quaternions with a magnitude of 1 (a unit quaternion)\n * this returns the same as the inverse but is faster to calculate.\n *\n * @param q - quaternion to compute the conjugate of.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The conjugate of q\n */\nexport function conjugate(q: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = -q[0];\n  dst[1] = -q[1];\n  dst[2] = -q[2];\n  dst[3] =  q[3];\n\n  return dst;\n}\n\n/**\n * Creates a quaternion from the given rotation matrix.\n *\n * The created quaternion is not normalized.\n *\n * @param m - rotation matrix\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nexport function fromMat(m: Mat3 | Mat4, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  /*\n  0 1 2\n  3 4 5\n  6 7 8\n\n  0 1 2\n  4 5 6\n  8 9 10\n   */\n\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  const trace = m[0] + m[5] + m[10];\n\n  if (trace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    const root = Math.sqrt(trace + 1); // 2w\n    dst[3] = 0.5 * root;\n    const invRoot = 0.5 / root; // 1/(4w)\n\n    dst[0] = (m[6] - m[9]) * invRoot;\n    dst[1] = (m[8] - m[2]) * invRoot;\n    dst[2] = (m[1] - m[4]) * invRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n\n    if (m[5] > m[0]) {\n      i = 1;\n    }\n    if (m[10] > m[i * 4 + i]) {\n      i = 2;\n    }\n\n    const j = (i + 1) % 3;\n    const k = (i + 2) % 3;\n\n    const root = Math.sqrt(m[i * 4 + i] - m[j * 4 + j] - m[k * 4 + k] + 1.0);\n    dst[i] = 0.5 * root;\n\n    const invRoot = 0.5 / root;\n\n    dst[3] = (m[j * 4 + k] - m[k * 4 + j]) * invRoot;\n    dst[j] = (m[j * 4 + i] + m[i * 4 + j]) * invRoot;\n    dst[k] = (m[k * 4 + i] + m[i * 4 + k]) * invRoot;\n  }\n\n  return dst;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param xAngleInRadians - angle to rotate around X axis in radians.\n * @param yAngleInRadians - angle to rotate around Y axis in radians.\n * @param zAngleInRadians - angle to rotate around Z axis in radians.\n * @param order - order to apply euler angles\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion representing the same rotation as the euler angles applied in the given order\n */\nexport function fromEuler(\n    xAngleInRadians: number,\n    yAngleInRadians: number,\n    zAngleInRadians: number,\n    order: RotationOrder,\n    dst?: Quat) {\n  dst = dst || new QuatType(4);\n\n  const xHalfAngle = xAngleInRadians * 0.5;\n  const yHalfAngle = yAngleInRadians * 0.5;\n  const zHalfAngle = zAngleInRadians * 0.5;\n\n  const sx = Math.sin(xHalfAngle);\n  const cx = Math.cos(xHalfAngle);\n  const sy = Math.sin(yHalfAngle);\n  const cy = Math.cos(yHalfAngle);\n  const sz = Math.sin(zHalfAngle);\n  const cz = Math.cos(zHalfAngle);\n\n  switch (order) {\n    case 'xyz':\n      dst[0] = sx * cy * cz + cx * sy * sz;\n      dst[1] = cx * sy * cz - sx * cy * sz;\n      dst[2] = cx * cy * sz + sx * sy * cz;\n      dst[3] = cx * cy * cz - sx * sy * sz;\n      break;\n\n    case 'xzy':\n      dst[0] = sx * cy * cz - cx * sy * sz;\n      dst[1] = cx * sy * cz - sx * cy * sz;\n      dst[2] = cx * cy * sz + sx * sy * cz;\n      dst[3] = cx * cy * cz + sx * sy * sz;\n      break;\n\n    case 'yxz':\n      dst[0] = sx * cy * cz + cx * sy * sz;\n      dst[1] = cx * sy * cz - sx * cy * sz;\n      dst[2] = cx * cy * sz - sx * sy * cz;\n      dst[3] = cx * cy * cz + sx * sy * sz;\n      break;\n\n    case 'yzx':\n      dst[0] = sx * cy * cz + cx * sy * sz;\n      dst[1] = cx * sy * cz + sx * cy * sz;\n      dst[2] = cx * cy * sz - sx * sy * cz;\n      dst[3] = cx * cy * cz - sx * sy * sz;\n      break;\n\n    case 'zxy':\n      dst[0] = sx * cy * cz - cx * sy * sz;\n      dst[1] = cx * sy * cz + sx * cy * sz;\n      dst[2] = cx * cy * sz + sx * sy * cz;\n      dst[3] = cx * cy * cz - sx * sy * sz;\n      break;\n\n    case 'zyx':\n      dst[0] = sx * cy * cz - cx * sy * sz;\n      dst[1] = cx * sy * cz + sx * cy * sz;\n      dst[2] = cx * cy * sz - sx * sy * cz;\n      dst[3] = cx * cy * cz + sx * sy * sz;\n      break;\n\n    default:\n      throw new Error(`Unknown rotation order: ${order}`);\n  }\n\n  return dst;\n}\n\n/**\n * Copies a quaternion. (same as {@link quat.clone})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is a copy of q\n */\nexport function copy(q: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = q[0];\n  dst[1] = q[1];\n  dst[2] = q[2];\n  dst[3] = q[3];\n\n  return dst;\n}\n\n/**\n * Clones a quaternion. (same as {@link quat.copy})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A copy of q.\n */\nexport const clone = copy;\n\n/**\n * Adds two quaternions; assumes a and b have the same dimension.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the sum of a and b.\n */\nexport function add(a: Quat, b: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  dst[3] = a[3] + b[3];\n\n  return dst;\n}\n\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nexport function subtract(a: Quat, b: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  dst[3] = a[3] - b[3];\n\n  return dst;\n}\n\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Multiplies a quaternion by a scalar.\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nexport function mulScalar(v: Quat, k: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  dst[3] = v[3] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a quaternion by a scalar. (same as mulScalar)\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nexport function divScalar(v: Quat, k: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  dst[3] = v[3] / k;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two quaternions\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns dot product\n */\nexport function dot(a: Quat, b: Quat): number {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n\n/**\n * Performs linear interpolation on two quaternions.\n * Given quaternions a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param t - Interpolation coefficient.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Quat, b: Quat, t: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  dst[3] = a[3] + t * (b[3] - a[3]);\n\n  return dst;\n}\n\n/**\n * Computes the length of quaternion\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nexport function length(v: Quat): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n\n/**\n * Computes the length of quaternion (same as length)\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of quaternion\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nexport function lengthSq(v: Quat): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n\n/**\n * Computes the square of the length of quaternion (same as lengthSq)\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Divides a quaternion by its Euclidean length and returns the quotient.\n * @param v - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The normalized quaternion.\n */\nexport function normalize(v: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n    dst[2] = v2 / len;\n    dst[3] = v3 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Check if 2 quaternions are approximately equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are approximately equal\n */\nexport function equalsApproximately(a: Quat, b: Quat): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON &&\n         Math.abs(a[2] - b[2]) < utils.EPSILON &&\n         Math.abs(a[3] - b[3]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 quaternions are exactly equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are exactly equal\n */\nexport function equals(a: Quat, b: Quat): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Creates an identity quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns an identity quaternion\n */\nexport function identity(dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 1;\n\n  return dst;\n}\n\nlet tempVec3: Vec3;\nlet xUnitVec3: Vec3;\nlet yUnitVec3: Vec3;\n\n/**\n * Computes a quaternion to represent the shortest rotation from one vector to another.\n *\n * @param aUnit - the start vector\n * @param bUnit - the end vector\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nexport function rotationTo(aUnit: Vec3, bUnit: Vec3, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  tempVec3 = tempVec3 || vec3.create();\n  xUnitVec3 = xUnitVec3 || vec3.create(1, 0, 0);\n  yUnitVec3 = yUnitVec3 || vec3.create(0, 1, 0);\n\n  const dot = vec3.dot(aUnit, bUnit);\n  if (dot < -0.999999) {\n    vec3.cross(xUnitVec3, aUnit, tempVec3);\n    if (vec3.len(tempVec3) < 0.000001) {\n      vec3.cross(yUnitVec3, aUnit, tempVec3);\n    }\n\n    vec3.normalize(tempVec3, tempVec3);\n    fromAxisAngle(tempVec3, Math.PI, dst);\n\n    return dst;\n  } else if (dot > 0.999999) {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 1;\n\n    return dst;\n  } else {\n    vec3.cross(aUnit, bUnit, tempVec3);\n\n    dst[0] = tempVec3[0];\n    dst[1] = tempVec3[1];\n    dst[2] = tempVec3[2];\n    dst[3] = 1 + dot;\n\n    return normalize(dst, dst);\n  }\n}\n\nlet tempQuat1: Quat;\nlet tempQuat2: Quat;\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param c - the third quaternion\n * @param d - the fourth quaternion\n * @param t - Interpolation coefficient 0 to 1\n * @returns result\n */\nexport function sqlerp(\n    a: Quat,\n    b: Quat,\n    c: Quat,\n    d: Quat,\n    t: number,\n    dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  tempQuat1 = tempQuat1 || new QuatType(4);\n  tempQuat2 = tempQuat2 || new QuatType(4);\n\n  slerp(a, d, t, tempQuat1);\n  slerp(b, c, t, tempQuat2);\n  slerp(tempQuat1, tempQuat2, 2 * t * (1 - t), dst);\n\n  return dst;\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 4 values, Float32Array with 4 values, or a Float64Array with 4 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link vec4.setDefaultType}.\n */\nexport type Vec4 = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Vec4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec4`. In other words you can do this\n *\n *     const v = vec4.cross(v1, v2);  // Creates a new Vec4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec4.create();\n *     vec4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let VecType: new (n: number) => Vec4 = Float32Array;\n\n/**\n * Sets the type this library creates for a Vec4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec4\n */\nexport function setDefaultType(ctor: new (n: number) => Vec4) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nexport function create(x?: number, y?: number, z?: number, w?: number): Vec4 {\n  const dst = new VecType(4);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n      if (z !== undefined) {\n        dst[2] = z;\n        if (w !== undefined) {\n          dst[3] = w;\n        }\n      }\n    }\n  }\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Vec4, create, setDefaultType, VecType } from './vec4';\nimport { Mat4 } from './mat4';\n\nexport default Vec4;\nexport { create, setDefaultType };\n\n/**\n * Creates a vec4; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Vec4\n * Also see {@link vec4.create} and {@link vec4.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, z: number, w: number, dst?: Vec4) {\n  dst = dst || new VecType(4);\n\n  dst[0] = x;\n  dst[1] = y;\n  dst[2] = z;\n  dst[3] = w;\n\n  return dst;\n}\n\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nexport function ceil(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.ceil(v[0]);\n  dst[1] = Math.ceil(v[1]);\n  dst[2] = Math.ceil(v[2]);\n  dst[3] = Math.ceil(v[3]);\n\n  return dst;\n}\n\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nexport function floor(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.floor(v[0]);\n  dst[1] = Math.floor(v[1]);\n  dst[2] = Math.floor(v[2]);\n  dst[3] = Math.floor(v[3]);\n\n  return dst;\n}\n\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nexport function round(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.round(v[0]);\n  dst[1] = Math.round(v[1]);\n  dst[2] = Math.round(v[2]);\n  dst[3] = Math.round(v[3]);\n\n  return dst;\n}\n\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nexport function clamp(v: Vec4, min = 0, max = 1, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.min(max, Math.max(min, v[0]));\n  dst[1] = Math.min(max, Math.max(min, v[1]));\n  dst[2] = Math.min(max, Math.max(min, v[2]));\n  dst[3] = Math.min(max, Math.max(min, v[3]));\n\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nexport function add(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  dst[3] = a[3] + b[3];\n\n  return dst;\n}\n\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nexport function addScaled(a: Vec4, b: Vec4, scale: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + b[0] * scale;\n  dst[1] = a[1] + b[1] * scale;\n  dst[2] = a[2] + b[2] * scale;\n  dst[3] = a[3] + b[3] * scale;\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport function subtract(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  dst[3] = a[3] - b[3];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nexport function equalsApproximately(a: Vec4, b: Vec4): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON &&\n         Math.abs(a[2] - b[2]) < utils.EPSILON &&\n         Math.abs(a[3] - b[3]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nexport function equals(a: Vec4, b: Vec4): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Vec4, b: Vec4, t: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  dst[3] = a[3] + t * (b[3] - a[3]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nexport function lerpV(a: Vec4, b: Vec4, t: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n  dst[3] = a[3] + t[3] * (b[3] - a[3]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nexport function max(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n  dst[3] = Math.max(a[3], b[3]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nexport function min(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n  dst[3] = Math.min(a[3], b[3]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function mulScalar(v: Vec4, k: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  dst[3] = v[3] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function divScalar(v: Vec4, k: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  dst[3] = v[3] / k;\n\n  return dst;\n}\n\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport function inverse(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = 1 / v[0];\n  dst[1] = 1 / v[1];\n  dst[2] = 1 / v[2];\n  dst[3] = 1 / v[3];\n\n  return dst;\n}\n\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport const invert = inverse;\n\n/**\n * Computes the dot product of two vectors\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nexport function dot(a: Vec4, b: Vec4): number {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nexport function length(v: Vec4): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport function lengthSq(v: Vec4): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport function distance(a: Vec4, b: Vec4): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  const dw = a[3] - b[3];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n}\n\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport const dist = distance;\n\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport function distanceSq(a: Vec4, b: Vec4): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  const dw = a[3] - b[3];\n  return dx * dx + dy * dy + dz * dz + dw * dw;\n}\n\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport const distSq = distanceSq;\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nexport function normalize(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n    dst[2] = v2 / len;\n    dst[3] = v3 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nexport function negate(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  dst[3] = -v[3];\n\n  return dst;\n}\n\n/**\n * Copies a vector. (same as {@link vec4.clone})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport function copy(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  dst[3] = v[3];\n\n  return dst;\n}\n\n/**\n * Clones a vector. (same as {@link vec4.copy})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport const clone = copy;\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport function multiply(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  dst[3] = a[3] * b[3];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport function divide(a: Vec4, b: Vec4, dst?: Vec4) {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  dst[3] = a[3] / b[3];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport const div = divide;\n\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nexport function zero(dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n\n  return dst;\n}\n\n\n/**\n * transform vec4 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec4 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat4(v: Vec4, m: Mat4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n  const w = v[3];\n\n  dst[0] = m[0] * x + m[4] * y + m[ 8] * z + m[12] * w;\n  dst[1] = m[1] * x + m[5] * y + m[ 9] * z + m[13] * w;\n  dst[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  dst[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\n  return dst;\n}\n\n\n/**\n * Treat a 4D vector as a direction and set it's length\n *\n * @param a The vec4 to lengthen\n * @param len The length of the resulting vector\n * @returns The lengthened vector\n */\nexport function setLength(a: Vec4, len: number, dst?: Vec4) {\n  dst = dst || new VecType(4);\n  normalize(a, dst);\n  return mulScalar(dst, len, dst);\n}\n\n/**\n * Ensure a vector is not longer than a max length\n *\n * @param a The vec4 to limit\n * @param maxLen The longest length of the resulting vector\n * @returns The vector, shortened to maxLen if it's too long\n */\nexport function truncate(a: Vec4, maxLen: number, dst?: Vec4) {\n  dst = dst || new VecType(4);\n\n  if (length(a) > maxLen) {\n    return setLength(a, maxLen, dst);\n  }\n\n  return copy(a, dst);\n}\n\n/**\n * Return the vector exactly between 2 endpoint vectors\n *\n * @param a Endpoint 1\n * @param b Endpoint 2\n * @returns The vector exactly residing between endpoints 1 and 2\n */\nexport function midpoint(a: Vec4, b: Vec4, dst?: Vec4) {\n  dst = dst || new VecType(4);\n  return lerp(a, b, 0.5, dst);\n}\n", "import Mat3, * as mat3 from './mat3-impl';\nimport Mat4, * as mat4 from './mat4-impl';\nimport Quat, * as quat from './quat-impl';\nimport Vec2, * as vec2 from './vec2-impl';\nimport Vec3, * as vec3 from './vec3-impl';\nimport Vec4, * as vec4 from './vec4-impl';\nimport * as utils from './utils';\n\n/**\n * Sets the type this library creates for all types\n *\n * example:\n *\n * ```\n * setDefaultType(Float64Array);\n * ```\n *\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n */\nexport function setDefaultType(ctor: new (n: number) => Float32Array | Float64Array | number[]) {\n  mat3.setDefaultType(ctor);\n  mat4.setDefaultType(ctor);\n  quat.setDefaultType(ctor);\n  vec2.setDefaultType(ctor);\n  vec3.setDefaultType(ctor);\n  vec4.setDefaultType(ctor);\n}\n\nexport {\n  Mat3,\n  mat3,\n  Mat4,\n  mat4,\n  Quat,\n  quat,\n  utils,\n  Vec2,\n  vec2,\n  Vec3,\n  vec3,\n  Vec4,\n  vec4,\n};", "const camDist = 2.5;\n\nexport const CAMERA_CFG = {\n  // pos + rot (magic values that work for this model, do not ask)\n  position: [camDist, 0, camDist],\n  target: [-1.5, 3.0, 0],\n  // projection\n  fovDgr: 60,\n  near: 0.01,\n  far: 100,\n};\n\nexport const BYTES_U8 = 1;\nexport const BYTES_F32 = 4;\nexport const BYTES_U32 = 4;\nexport const BYTES_U64 = 8;\nexport const BYTES_VEC4 = BYTES_F32 * 4;\nexport const BYTES_MAT4 = BYTES_F32 * 16;\n\ntype SortMethod = 'GPU' | 'CPU' | 'CPU_NAIVE';\ntype RenderMethod = 'EIGENVECTORS' | 'SQUARE_BILLBOARD';\n\nexport const CONFIG = {\n  githubRepoLink: 'https://github.com/Scthe/gaussian-splatting-webgpu',\n  sortMethod: 'GPU' as SortMethod,\n  renderMethod: 'Eigenvectors' as RenderMethod,\n  scaleModifier: 1.0,\n  clearColor: [0, 0, 0],\n  rotationSpeed: 1,\n  movementSpeed: 2,\n  drawGround: false,\n};\n", "import { Mat4, mat4 } from 'wgpu-matrix';\nimport { CAMERA_CFG } from './constants.ts';\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport type TypedArray = Float32Array | Uint8Array | Uint32Array;\n\nexport async function createGpuDevice() {\n  try {\n    const adapter = await navigator.gpu.requestAdapter({\n      powerPreference: 'high-performance',\n    });\n    const onError = (msg: string) =>\n      console.error(`WebGPU init error: '${msg}'`);\n\n    if (!adapter) {\n      // On web: check if https. On ff, WebGPU is under dev flag.\n      onError('No adapter found. WebGPU seems to be unavailable.');\n      return;\n    }\n\n    const canTimestamp = adapter.features.has('timestamp-query');\n    const requiredFeatures: GPUFeatureName[] = [];\n    if (canTimestamp) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    const device = await adapter?.requestDevice({ requiredFeatures });\n    if (!device) {\n      onError('Failed to get GPUDevice from the adapter.');\n      return;\n    }\n\n    return device;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n}\n\nexport const dgr2rad = (dgr: number) => (dgr * Math.PI) / 180;\n\nexport function createCameraProjectionMat(viewportSize: Dimensions): Mat4 {\n  const aspectRatio = viewportSize.width / viewportSize.height;\n\n  return mat4.perspective(\n    dgr2rad(CAMERA_CFG.fovDgr),\n    aspectRatio,\n    CAMERA_CFG.near,\n    CAMERA_CFG.far\n  );\n}\n\nexport function getModelViewProjectionMatrix(\n  viewMat: Mat4,\n  projMat: Mat4\n): Mat4 {\n  return mat4.multiply(projMat, viewMat);\n}\n\n/** debug matrix to string */\nexport function dbgMat(m: Float32Array) {\n  const s = Math.sqrt(m.length);\n  let result = '';\n  for (let i = 0; i < m.length; i++) {\n    if (i % s === 0) result += '\\n';\n    else result += '   ';\n    result += m[i].toFixed(2);\n  }\n  return `[${result}\\n]`;\n}\n\nexport const GPU_BUFFER_USAGE_UNIFORM: GPUBufferUsageFlags =\n  GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n\nexport function createGPUBuffer<T extends TypedArray>(\n  device: GPUDevice,\n  label: string,\n  usage: GPUBufferUsageFlags,\n  data: T\n) {\n  const gpuBuffer = device.createBuffer({\n    label,\n    size: data.byteLength,\n    usage,\n  });\n  // device.queue.writeBuffer(gpuBuffer, 0, data, 0, data.length);\n  device.queue.writeBuffer(gpuBuffer, 0, data);\n  return gpuBuffer;\n}\n\nexport function writeMatrixToGPUBuffer(\n  device: GPUDevice,\n  gpuBuffer: GPUBuffer,\n  offsetBytes: number,\n  data: Mat4\n) {\n  // deno-lint-ignore no-explicit-any\n  const f32Arr: Float32Array = data as any;\n  device.queue.writeBuffer(gpuBuffer, offsetBytes, f32Arr.buffer, 0);\n}\n\nexport function makeUint(x: number, y: number, z: number, w: number) {\n  const a = (x & 0xff) << 24;\n  const b = (y & 0xff) << 16;\n  const c = (z & 0xff) << 8;\n  const d = (w & 0xff) << 0;\n  return a + b + c + d;\n}\n\n/** Returns floor. Examples:\n * - for 3 returns 2\n * - for 4 returns 4\n * - for 7 returns 4\n * - for 8 returns 8\n */\nexport function nearestPowerOf2_floor(n: number) {\n  return 1 << (31 - Math.clz32(n));\n}\n\nexport function nearestPowerOf2_ceil(n: number) {\n  const floor = nearestPowerOf2_floor(n);\n  return floor === n ? n : 2 * floor;\n}\n\nexport function getClassName(a: object) {\n  // deno-lint-ignore no-explicit-any\n  return (a as any).constructor.name;\n}\n\nexport const createArray = (len: number) => Array(len).fill(0);\n\n/** Multiplies vec3 (`pos.w` is ignored). */\nexport function calcDepth(\n  mvp: Mat4,\n  pointsVec4: Float32Array,\n  pointsOffset: number\n) {\n  return (\n    mvp[2] * pointsVec4[pointsOffset] +\n    mvp[6] * pointsVec4[pointsOffset + 1] +\n    mvp[10] * pointsVec4[pointsOffset + 2]\n  );\n}\n\nexport function assertHasInjectedShader(clazz: {\n  SHADER_CODE: string;\n  name: string;\n}) {\n  if (!clazz.SHADER_CODE || clazz.SHADER_CODE.length == 0) {\n    throw new Error(`${clazz.name} has no .SHADER_CODE defined.`);\n  }\n}\n\ntype ShaderOverrides = { [key: string]: string };\n\n/**\n * In WGSL there is something called overrides:\n *  - https://www.w3.org/TR/WGSL/#override-declaration\n *  - https://webgpufundamentals.org/webgpu/lessons/webgpu-constants.html\n * Would have been better than text replace. But neither works\n * with language servers in text editors, so might as well text replace.\n */\nexport function applyShaderTextReplace(\n  text: string,\n  overrides?: ShaderOverrides\n) {\n  let code = text;\n  overrides = overrides || {};\n  Object.entries(overrides).forEach(([k, v]) => {\n    code = code.replaceAll(k, v);\n  });\n  return code;\n}\n\nexport const getItemsPerThread = (items: number, threads: number) =>\n  Math.ceil(items / threads);\n\nexport const lerp = (a: number, b: number, fac: number) => {\n  fac = Math.max(0, Math.min(1, fac));\n  return a * (1 - fac) + b * fac;\n};\n\ntype ErrorCb = (msg: string) => never;\n\nexport function createErrorSystem(device: GPUDevice) {\n  const ERROR_SCOPES: GPUErrorFilter[] = [\n    'internal',\n    'out-of-memory',\n    'validation',\n  ];\n  const ERROR_SCOPES_REV = ERROR_SCOPES.toReversed();\n\n  let currentScopeName = '-';\n\n  return {\n    startErrorScope,\n    reportErrorScopeAsync,\n  };\n\n  function startErrorScope(scopeName: string = '-') {\n    currentScopeName = scopeName;\n    ERROR_SCOPES.forEach((sc) => device.pushErrorScope(sc));\n  }\n\n  async function reportErrorScopeAsync(cb?: ErrorCb) {\n    let lastError = undefined;\n\n    for (const name of ERROR_SCOPES_REV) {\n      const err = await device.popErrorScope();\n      if (err) {\n        const msg = `WebGPU error [${currentScopeName}][${name}]: ${err.message}`;\n        lastError = msg;\n        if (cb) {\n          cb(msg);\n        } else {\n          console.error(msg);\n        }\n      }\n    }\n\n    return lastError;\n  }\n}\n\nexport const rethrowWebGPUError = (msg: string): never => {\n  throw new Error(msg);\n};\n", "/**************\n * Copied from official webgpu-samples repo under\n * 'BSD 3-Clause \"New\" or \"Revised\" License'.\n *\n * https://github.com/webgpu/webgpu-samples/blob/main/LICENSE.txt\n * https://webgpu.github.io/webgpu-samples/?sample=cameras\n */\n\n// deno-lint-ignore no-explicit-any\ntype KeyboardEvent = any;\n// deno-lint-ignore no-explicit-any\ntype PointerEvent = any;\n// deno-lint-ignore no-explicit-any\ntype WheelEvent = any;\n// deno-lint-ignore no-explicit-any\ntype HTMLCanvasElement = any;\n\nconst Key = {\n  CAMERA_FORWARD: 'w',\n  CAMERA_BACK: 's',\n  CAMERA_LEFT: 'a',\n  CAMERA_RIGHT: 'd',\n  CAMERA_UP: ' ',\n  CAMERA_DOWN: 'z',\n};\n\n// Input holds as snapshot of input state\nexport default interface Input {\n  // Digital input (e.g keyboard state)\n  readonly directions: {\n    forward: boolean;\n    backward: boolean;\n    left: boolean;\n    right: boolean;\n    up: boolean;\n    down: boolean;\n  };\n  // Analog input (e.g mouse, touchscreen)\n  readonly mouse: {\n    x: number;\n    y: number;\n    zoom: number;\n    touching: boolean;\n  };\n}\n\nexport const createMockInputState = (): Input => ({\n  directions: {\n    forward: false,\n    backward: false,\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n  },\n  mouse: {\n    x: 0,\n    y: 0,\n    zoom: 0,\n    touching: false,\n  },\n});\n\n// InputHandler is a function that when called, returns the current Input state.\nexport type InputHandler = () => Input;\n\n// createInputHandler returns an InputHandler by attaching event handlers to the window and canvas.\nexport function createInputHandler(\n  window: Window,\n  canvas: HTMLCanvasElement\n): InputHandler {\n  const directions: Input['directions'] = {\n    forward: false,\n    backward: false,\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n  };\n  const mouse: Input['mouse'] = {\n    x: 0,\n    y: 0,\n    zoom: 0,\n    touching: false,\n  };\n\n  const setDigital = (e: KeyboardEvent, value: boolean) => {\n    switch (e.key) {\n      case Key.CAMERA_FORWARD:\n        directions.forward = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_BACK:\n        directions.backward = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_LEFT:\n        directions.left = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_RIGHT:\n        directions.right = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_UP:\n        directions.up = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_DOWN:\n        directions.down = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n    }\n  };\n\n  window.addEventListener('keydown', (e) => setDigital(e, true));\n  window.addEventListener('keyup', (e) => setDigital(e, false));\n\n  canvas.style.touchAction = 'pinch-zoom';\n  canvas.addEventListener('pointerdown', () => {\n    mouse.touching = true;\n  });\n  canvas.addEventListener('pointerup', () => {\n    mouse.touching = false;\n  });\n  canvas.addEventListener('pointermove', (e: PointerEvent) => {\n    mouse.touching = e.pointerType == 'mouse' ? (e.buttons & 1) !== 0 : true;\n    if (mouse.touching) {\n      mouse.x += e.movementX;\n      mouse.y += e.movementY;\n    }\n  });\n  canvas.addEventListener(\n    'wheel',\n    (e: WheelEvent) => {\n      mouse.touching = (e.buttons & 1) !== 0;\n      if (mouse.touching) {\n        mouse.zoom += Math.sign(e.deltaY);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    { passive: false }\n  );\n\n  return () => {\n    const out: Input = {\n      directions: { ...directions },\n      mouse: { ...mouse },\n    };\n    // Clear the analog values, as these accumulate.\n    mouse.x = 0;\n    mouse.y = 0;\n    mouse.zoom = 0;\n    return out;\n  };\n}\n", "import { BYTES_MAT4, BYTES_VEC4, CONFIG } from '../constants.ts';\nimport { GPU_BUFFER_USAGE_UNIFORM, writeMatrixToGPUBuffer } from '../utils.ts';\nimport { PassCtx } from './passCtx.ts';\n\n/** Example: https://webgpu.github.io/webgpu-samples/?sample=cameras#cube.wgsl */\nexport class RenderUniformsBuffer {\n  public static BUFFER_SIZE =\n    BYTES_MAT4 + // mvpMatrix\n    BYTES_MAT4 + // viewMatrix\n    BYTES_MAT4 + // projMatrix\n    BYTES_VEC4 + // viewportAndFocals\n    BYTES_VEC4; // scaleModifier\n\n  private readonly gpuBuffer: GPUBuffer;\n\n  constructor(device: GPUDevice) {\n    this.gpuBuffer = device.createBuffer({\n      label: 'GlobalUniformBuffer',\n      size: RenderUniformsBuffer.BUFFER_SIZE,\n      usage: GPU_BUFFER_USAGE_UNIFORM,\n    });\n  }\n\n  createBindingDesc(bindingIdx: number): GPUBindGroupEntry {\n    return {\n      binding: bindingIdx,\n      resource: {\n        buffer: this.gpuBuffer,\n      },\n    };\n  }\n\n  update(ctx: PassCtx) {\n    const {\n      device,\n      mvpMatrix,\n      viewMatrix,\n      projMatrix,\n      viewport,\n      focalX,\n      focalY,\n    } = ctx;\n    let offsetBytes = 0;\n\n    writeMatrixToGPUBuffer(device, this.gpuBuffer, offsetBytes, mvpMatrix);\n    offsetBytes += BYTES_MAT4;\n\n    writeMatrixToGPUBuffer(device, this.gpuBuffer, offsetBytes, viewMatrix);\n    offsetBytes += BYTES_MAT4;\n\n    writeMatrixToGPUBuffer(device, this.gpuBuffer, offsetBytes, projMatrix);\n    offsetBytes += BYTES_MAT4;\n\n    // scale as vec4\n    const miscF32Array = new Float32Array([\n      viewport.width,\n      viewport.height,\n      focalX,\n      focalY,\n    ]);\n    device.queue.writeBuffer(\n      this.gpuBuffer,\n      offsetBytes,\n      miscF32Array.buffer,\n      0\n    );\n    offsetBytes += BYTES_VEC4;\n\n    // scale as vec4\n    miscF32Array[0] = CONFIG.scaleModifier;\n    device.queue.writeBuffer(\n      this.gpuBuffer,\n      offsetBytes,\n      miscF32Array.buffer,\n      0\n    );\n    offsetBytes += BYTES_VEC4;\n  }\n}\n", "import { BYTES_F32, BYTES_U8 } from './constants.ts';\n\n// TODO .PLY loader: https://github.com/antimatter15/splat/blob/main/main.js#L474\n\nexport const SPLAT_SIZE_BYTES =\n  3 * BYTES_F32 + // position\n  3 * BYTES_F32 + // scale\n  4 * BYTES_U8 + // color (SH C0)\n  4 * BYTES_U8; // rotation\n\nexport const VERTICES_PER_SPLAT = 6;\n\nexport interface GaussianSplats {\n  count: number;\n\n  // data for Gaussians:\n  positions: Float32Array; // vec4 * count\n  positionsBuffer: GPUBuffer;\n  rotationsBuffer: GPUBuffer;\n  scalesBuffer: GPUBuffer;\n  colorsBuffer: GPUBuffer; // TODO this can be inside vec4<u32> with quaternion\n\n  // indices:\n  /** indices used for rendering. See `VERTICES_PER_SPLAT` */\n  indicesBuffer: GPUBuffer;\n}\n", "import { GaussianSplats, VERTICES_PER_SPLAT } from '../gaussianSplats.ts';\nimport { CONFIG } from '../constants.ts';\nimport { assertHasInjectedShader } from '../utils.ts';\nimport { PassCtx } from './passCtx.ts';\nimport { RenderUniformsBuffer } from './renderUniformsBuffer.ts';\n\nconst VERTEX_ATTRIBUTES: GPUVertexBufferLayout[] = [];\n\nconst UNIFORMS_DESC: GPUBindGroupLayoutDescriptor = {\n  entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.VERTEX,\n      buffer: {\n        minBindingSize: RenderUniformsBuffer.BUFFER_SIZE,\n      },\n    },\n    {\n      binding: 1,\n      visibility: GPUShaderStage.VERTEX,\n      buffer: { type: 'read-only-storage' },\n    },\n    {\n      binding: 2,\n      visibility: GPUShaderStage.VERTEX,\n      buffer: { type: 'read-only-storage' },\n    },\n    {\n      binding: 3,\n      visibility: GPUShaderStage.VERTEX,\n      buffer: { type: 'read-only-storage' },\n    },\n    {\n      binding: 4,\n      visibility: GPUShaderStage.VERTEX,\n      buffer: { type: 'read-only-storage' },\n    },\n  ],\n};\n\nexport class RenderSplatsGEO {\n  public static SHADER_CODE: string = '';\n  public static NAME: string = RenderSplatsGEO.name;\n\n  private readonly uniformsLayout: GPUBindGroupLayout;\n  private readonly renderPipelineEigenvectors: GPURenderPipeline;\n  private readonly renderPipelineSquare: GPURenderPipeline;\n  private readonly uniformsBindings: GPUBindGroup;\n\n  constructor(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat,\n    uniforms: RenderUniformsBuffer,\n    splats: GaussianSplats\n  ) {\n    assertHasInjectedShader(RenderSplatsGEO);\n    this.uniformsLayout = device.createBindGroupLayout(UNIFORMS_DESC);\n\n    const shaderModule = device.createShaderModule({\n      code: RenderSplatsGEO.SHADER_CODE,\n    });\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUPipelineLayout\n    const pipelineLayout = device.createPipelineLayout({\n      bindGroupLayouts: [this.uniformsLayout],\n    });\n    this.renderPipelineEigenvectors = RenderSplatsGEO.createRenderPipeline(\n      device,\n      pipelineLayout,\n      shaderModule,\n      outTextureFormat,\n      'vs_mainEigenvectors',\n      'fs_mainEigenvectors'\n    );\n    this.renderPipelineSquare = RenderSplatsGEO.createRenderPipeline(\n      device,\n      pipelineLayout,\n      shaderModule,\n      outTextureFormat,\n      'vs_mainSquare',\n      'fs_mainSquare'\n    );\n\n    this.uniformsBindings = RenderSplatsGEO.assignResourcesToBindings(\n      device,\n      this.uniformsLayout,\n      uniforms,\n      splats\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    pipelineLayout: GPUPipelineLayout,\n    shaderModule: GPUShaderModule,\n    outTextureFormat: GPUTextureFormat,\n    vertexShaderEntryPoint: string,\n    fragmentShaderEntryPoint: string\n  ) {\n    return device.createRenderPipeline({\n      label: `splats-render-${vertexShaderEntryPoint}`,\n      layout: pipelineLayout,\n      // layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: vertexShaderEntryPoint,\n        buffers: VERTEX_ATTRIBUTES,\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: fragmentShaderEntryPoint,\n        targets: [\n          {\n            format: outTextureFormat,\n            blend: {\n              // Previous fragment at the pixel had written color with alpha A.\n              // The next fragment behind it (sorting!) will have weight (1-A).\n              //\n              // See eq.3 in \"3D Gaussian Splatting for Real-Time Radiance Field Rendering\",\n              // the $\\prod_{j=1}^{i-1} 1 - \\alpha_j$ part.\n              // It's exactly same in NERFs, literary everything uses this equation.\n              //\n              // https://www.sctheblog.com/blog/gaussian-splatting/#blending\n              // https://www.sctheblog.com/blog/gaussian-splatting/#blending-settings\n              color: {\n                srcFactor: 'one-minus-dst-alpha',\n                dstFactor: 'one',\n                operation: 'add',\n              },\n              alpha: {\n                srcFactor: 'one-minus-dst-alpha',\n                dstFactor: 'one',\n                operation: 'add',\n              },\n            },\n          },\n        ],\n      },\n      primitive: {\n        cullMode: 'none',\n        topology: 'triangle-list',\n        stripIndexFormat: undefined,\n      },\n    });\n  }\n\n  private static assignResourcesToBindings(\n    device: GPUDevice,\n    uniformsLayout: GPUBindGroupLayout,\n    uniforms: RenderUniformsBuffer,\n    splats: GaussianSplats\n  ) {\n    return device.createBindGroup({\n      layout: uniformsLayout,\n      entries: [\n        uniforms.createBindingDesc(0),\n        {\n          binding: 1,\n          resource: { buffer: splats.positionsBuffer },\n        },\n        {\n          binding: 2,\n          resource: { buffer: splats.rotationsBuffer },\n        },\n        {\n          binding: 3,\n          resource: { buffer: splats.scalesBuffer },\n        },\n        {\n          binding: 4,\n          resource: { buffer: splats.colorsBuffer },\n        },\n      ],\n    });\n  }\n\n  draw(ctx: PassCtx, targetTexture: GPUTexture, loadOp: GPULoadOp) {\n    const { cmdBuf, splats, profiler } = ctx;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: RenderSplatsGEO.NAME,\n      colorAttachments: [\n        {\n          view: targetTexture.createView(),\n          loadOp,\n          storeOp: 'store',\n          clearValue: [\n            CONFIG.clearColor[0],\n            CONFIG.clearColor[1],\n            CONFIG.clearColor[2],\n            0, // important for blending!\n          ],\n        },\n      ],\n      timestampWrites: profiler?.createScopeGpu(RenderSplatsGEO.NAME),\n    });\n\n    // set render pass data\n    const pipeline =\n      CONFIG.renderMethod === 'SQUARE_BILLBOARD'\n        ? this.renderPipelineSquare\n        : this.renderPipelineEigenvectors;\n    // renderPass.pushDebugGroup('Prepare data for draw.');\n    renderPass.setPipeline(pipeline);\n    renderPass.setBindGroup(0, this.uniformsBindings);\n    renderPass.setIndexBuffer(splats.indicesBuffer, 'uint32');\n    // renderPass.popDebugGroup();\n    // renderPass.insertDebugMarker('Draw');\n\n    // draw\n    const vertexCount = splats.count * VERTICES_PER_SPLAT;\n    renderPass.drawIndexed(vertexCount, 1, 0, 0, 0);\n\n    // fin\n    renderPass.end();\n  }\n}\n", "import {\n  GPU_BUFFER_USAGE_UNIFORM,\n  applyShaderTextReplace,\n  assertHasInjectedShader,\n  createGPUBuffer,\n  getItemsPerThread,\n} from '../../utils.ts';\nimport { PassCtx } from '../passCtx.ts';\n\n/** https://en.wikipedia.org/wiki/Bitonic_sorter */\nexport class BitonicSort {\n  public static NAME: string = BitonicSort.name;\n  public static SHADER_CODE: string = '';\n  private static NUM_THREADS = 8192;\n  private static WORKGROUP_SIZE = 128;\n\n  private readonly pipeline: GPUComputePipeline;\n  private readonly gpuUniformBuffers: GPUBuffer[];\n  private readonly gpuUniformBuffersBindGroups: GPUBindGroup[];\n\n  constructor(\n    device: GPUDevice,\n    itemCountCeilPwr2: number,\n    indicesBuffer: GPUBuffer,\n    distancesBuffer: GPUBuffer\n  ) {\n    assertHasInjectedShader(BitonicSort);\n    const itemsPerThread = getItemsPerThread(\n      itemCountCeilPwr2,\n      BitonicSort.NUM_THREADS\n    );\n\n    this.pipeline = BitonicSort.createPipeline(device, itemsPerThread);\n\n    this.gpuUniformBuffers = BitonicSort.createUniformBuffers(\n      device,\n      itemCountCeilPwr2\n    );\n    console.log(\n      `Bitonic sort will have ${this.gpuUniformBuffers.length} passes.`\n    );\n    this.gpuUniformBuffersBindGroups = this.gpuUniformBuffers.map(\n      (uniformBuffer) =>\n        BitonicSort.createBindGroup(\n          device,\n          this.pipeline,\n          indicesBuffer,\n          distancesBuffer,\n          uniformBuffer\n        )\n    );\n  }\n\n  private static createPipeline(device: GPUDevice, itemsPerThread: number) {\n    const code = applyShaderTextReplace(BitonicSort.SHADER_CODE, {\n      __ITEMS_PER_THREAD__: '' + itemsPerThread,\n      __WORKGROUP_SIZE__: '' + BitonicSort.WORKGROUP_SIZE,\n    });\n    const shaderModule = device.createShaderModule({ code });\n    return device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: 'main',\n      },\n    });\n  }\n\n  cmdSort(ctx: PassCtx) {\n    const { cmdBuf, profiler } = ctx;\n\n    /*const profilerScope = this.profiler.startRegionGpu(\n      cmdBuf,\n      `${BitonicSort.NAME}(${this.gpuUniformBuffersBindGroups.length} calls)`\n    );*/\n\n    this.gpuUniformBuffersBindGroups.forEach((uniformBindGroup) => {\n      const computePass = cmdBuf.beginComputePass({\n        timestampWrites: profiler?.createScopeGpu(BitonicSort.NAME),\n      });\n      computePass.setPipeline(this.pipeline);\n      computePass.setBindGroup(0, uniformBindGroup);\n      computePass.dispatchWorkgroups(\n        BitonicSort.NUM_THREADS / BitonicSort.WORKGROUP_SIZE\n      );\n      computePass.end();\n    });\n\n    // this.profiler.endRegionGpu(cmdBuf, profilerScope);\n  }\n\n  /**\n   * TODO inline k,j iterations into the kernel? No global barriers means fancy with workgroup barriers?\n   *\n   * See below for better, but not working solutions.\n   * TL;DR: Uniforms have to be aligned to 256 bytes, we only have BYTES_U32*2=8.\n   * That would be a massive waste of space.\n   */\n  private static createUniformBuffers(device: GPUDevice, elementCount: number) {\n    const uniformBuffers = [];\n\n    // WIKIPEDIA: k is doubled every iteration\n    for (let k = 2; k <= elementCount; k <<= 1) {\n      // WIKIPEDIA: j is halved at every iteration, with truncation of fractional parts\n      //\n      // since JS is.. JS, i'd rather bit shift instead of divide.\n      // Call me paranoid..\n      for (let j = k >> 1; j > 0; j >>= 1) {\n        const bufferContent = new Uint32Array([j, k]);\n        // console.log('BitonicSort:', { j, k });\n\n        const gpuBuffer = createGPUBuffer(\n          device,\n          `bitonic-sort.uniforms-buffer(k=${k},j=${j})`,\n          GPU_BUFFER_USAGE_UNIFORM,\n          bufferContent\n        );\n        uniformBuffers.push(gpuBuffer);\n      }\n    }\n\n    return uniformBuffers;\n  }\n\n  private static createBindGroup = (\n    device: GPUDevice,\n    computePipeline: GPUComputePipeline,\n    indicesBuffer: GPUBuffer,\n    distancesBuffer: GPUBuffer,\n    uniformsBuffer: GPUBuffer\n  ) =>\n    device.createBindGroup({\n      layout: computePipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: { buffer: indicesBuffer },\n        },\n        {\n          binding: 1,\n          resource: { buffer: distancesBuffer },\n        },\n        {\n          binding: 2,\n          resource: { buffer: uniformsBuffer },\n        },\n      ],\n    });\n\n  /*\n  Alternatives to uniforms:\n  1) 1 GPUBuffer with uniforms, 1 GpuBindGroup controlled by offsets\n     Uses `computePass.setBindGroup(0, gpuBindGroup, [byteOffset]);`\n     Does not work cause:\n      - \"Dynamic Offset[0] (8) is not 256 byte aligned.\"\n  2) 1 GPUBuffer with uniforms, many GpuBindGroups\n     Each bind group specifies GPUBuffer subset using: \n      - `resource: { buffer, offset: bufferOffsetBytes, size: itemSize },`\n      Does not work cause:\n        - \"does not satisfy the minimum BufferBindingType::Uniform alignment (256).\"\n\n\n  private static createUniformsOriginal(\n    device: GPUDevice,\n    computePipeline: GPUComputePipeline,\n    indicesBuffer: GPUBuffer,\n    distancesBuffer: GPUBuffer,\n    elementCount: number\n  ): [GPUBuffer, Array<GPUBindGroup>] {\n    const jkArray: Array<[number, number]> = [];\n\n    // WIKIPEDIA: k is doubled every iteration\n    for (let k = 2; k <= elementCount; k <<= 1) {\n      // WIKIPEDIA: j is halved at every iteration, with truncation of fractional parts\n      //\n      // since JS is.. JS, i'd rather bit shift instead of divide.\n      // Call me paranoid..\n      for (let j = k >> 1; j > 0; j >>= 1) {\n        jkArray.push([j, k]);\n      }\n    }\n    console.log(\n      `Bitonic sort will have ${jkArray.length} passes. Array<[j,k]>:`,\n      jkArray\n    );\n\n    // single unified buffer for all\n    const bufferContent = new Uint32Array(jkArray.length * 2);\n    jkArray.forEach(([j, k], idx) => {\n      bufferContent[2 * idx] = j;\n      bufferContent[2 * idx + 1] = k;\n    });\n    const buffer = createGPUBuffer(\n      device,\n      `bitonic-sort.uniforms-buffer`,\n      GPU_BUFFER_USAGE_UNIFORM,\n      bufferContent\n    );\n\n    const itemSize = 2 * BYTES_U32;\n    const bindGroups = jkArray.map((_, idx) => {\n      const bufferOffsetBytes = idx * itemSize;\n      return device.createBindGroup({\n        layout: computePipeline.getBindGroupLayout(0),\n        entries: [\n          {\n            binding: 0,\n            resource: { buffer: indicesBuffer },\n          },\n          {\n            binding: 1,\n            resource: {\n              buffer: distancesBuffer,\n            },\n          },\n          {\n            binding: 2,\n            resource: { buffer, offset: bufferOffsetBytes, size: itemSize },\n          },\n        ],\n      });\n    });\n\n    return [buffer, bindGroups];\n  }\n  */\n}\n", "import { BYTES_VEC4, BYTES_MAT4 } from '../../constants.ts';\nimport {\n  GPU_BUFFER_USAGE_UNIFORM,\n  applyShaderTextReplace,\n  assertHasInjectedShader,\n  getItemsPerThread,\n  writeMatrixToGPUBuffer,\n} from '../../utils.ts';\nimport { PassCtx } from '../passCtx.ts';\n\nexport class CalcDepthsPass {\n  public static NAME: string = CalcDepthsPass.name;\n  private static readonly NUM_THREADS = 64;\n  public static SHADER_CODE: string = '';\n\n  private readonly pipeline: GPUComputePipeline;\n  private readonly uniformsBindings: GPUBindGroup;\n  private readonly uniformsBuffer: GPUBuffer;\n\n  constructor(\n    device: GPUDevice,\n    splatPositions: GPUBuffer,\n    // F32 buffer of size nearestPowerOf2_ceil($splatCount)\n    distancesBuffer: GPUBuffer,\n    // U32 buffer of size nearestPowerOf2_ceil($splatCount)\n    indicesBuffer: GPUBuffer\n  ) {\n    assertHasInjectedShader(CalcDepthsPass);\n    const splatCount = splatPositions.size / BYTES_VEC4;\n    const itemsPerThread = getItemsPerThread(\n      splatCount,\n      CalcDepthsPass.NUM_THREADS\n    );\n\n    this.uniformsBuffer = device.createBuffer({\n      label: 'CalcDepthsPass-uniforms',\n      size: BYTES_MAT4,\n      usage: GPU_BUFFER_USAGE_UNIFORM,\n    });\n\n    this.pipeline = CalcDepthsPass.createPipeline(\n      device,\n      splatCount,\n      itemsPerThread\n    );\n\n    this.uniformsBindings = device.createBindGroup({\n      layout: this.pipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: { buffer: splatPositions },\n        },\n        {\n          binding: 1,\n          resource: { buffer: distancesBuffer },\n        },\n        {\n          binding: 2,\n          resource: { buffer: indicesBuffer },\n        },\n        {\n          binding: 3,\n          resource: { buffer: this.uniformsBuffer },\n        },\n      ],\n    });\n  }\n\n  private static createPipeline(\n    device: GPUDevice,\n    splatCount: number,\n    itemsPerThread: number\n  ) {\n    const code = applyShaderTextReplace(CalcDepthsPass.SHADER_CODE, {\n      __ITEMS_PER_THREAD__: '' + itemsPerThread,\n      __SPLAT_COUNT__: '' + splatCount,\n    });\n    const shaderModule = device.createShaderModule({ code });\n    return device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: 'main',\n      },\n    });\n  }\n\n  cmdCalcDepths(ctx: PassCtx) {\n    const { cmdBuf, device, mvpMatrix, profiler } = ctx;\n\n    writeMatrixToGPUBuffer(device, this.uniformsBuffer, 0, mvpMatrix);\n\n    const computePass = cmdBuf.beginComputePass({\n      label: 'calc-depths-pass',\n      timestampWrites: profiler?.createScopeGpu(CalcDepthsPass.NAME),\n    });\n    computePass.setPipeline(this.pipeline);\n    computePass.setBindGroup(0, this.uniformsBindings);\n    computePass.dispatchWorkgroups(CalcDepthsPass.NUM_THREADS);\n    computePass.end();\n  }\n}\n", "import { VERTICES_PER_SPLAT } from '../../gaussianSplats.ts';\nimport {\n  applyShaderTextReplace,\n  assertHasInjectedShader,\n  getItemsPerThread,\n} from '../../utils.ts';\nimport { PassCtx } from '../passCtx.ts';\n\nexport class UnrollIndicesPass {\n  public static NAME: string = UnrollIndicesPass.name;\n  private static readonly NUM_THREADS = 64;\n  public static SHADER_CODE: string = '';\n\n  private readonly pipeline: GPUComputePipeline;\n  private readonly uniformsBindings: GPUBindGroup;\n\n  constructor(\n    device: GPUDevice,\n    indicesBuffer: GPUBuffer,\n    unrolledIndicesBuffer: GPUBuffer,\n    splatCount: number\n  ) {\n    assertHasInjectedShader(UnrollIndicesPass);\n    const itemsPerThread = getItemsPerThread(\n      splatCount,\n      UnrollIndicesPass.NUM_THREADS\n    );\n\n    this.pipeline = UnrollIndicesPass.createPipeline(device, itemsPerThread);\n\n    this.uniformsBindings = device.createBindGroup({\n      layout: this.pipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: { buffer: indicesBuffer },\n        },\n        {\n          binding: 1,\n          resource: { buffer: unrolledIndicesBuffer },\n        },\n      ],\n    });\n  }\n\n  private static createPipeline(device: GPUDevice, itemsPerThread: number) {\n    const code = applyShaderTextReplace(UnrollIndicesPass.SHADER_CODE, {\n      __ITEMS_PER_THREAD__: '' + itemsPerThread,\n      __VERTICES_PER_SPLAT__: '' + VERTICES_PER_SPLAT,\n    });\n    const shaderModule = device.createShaderModule({ code });\n    return device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: 'main',\n      },\n    });\n  }\n\n  cmdUnrollIndices(ctx: PassCtx) {\n    const { cmdBuf, profiler } = ctx;\n\n    const computePass = cmdBuf.beginComputePass({\n      label: 'unroll-indices-pass',\n      timestampWrites: profiler?.createScopeGpu(UnrollIndicesPass.NAME),\n    });\n    computePass.setPipeline(this.pipeline);\n    computePass.setBindGroup(0, this.uniformsBindings);\n    computePass.dispatchWorkgroups(UnrollIndicesPass.NUM_THREADS);\n    computePass.end();\n  }\n}\n", "import { BYTES_F32, BYTES_U32 } from '../../constants.ts';\nimport { GaussianSplats } from '../../gaussianSplats.ts';\nimport { nearestPowerOf2_ceil } from '../../utils.ts';\nimport { BitonicSort } from './bitonicSort.ts';\nimport { CalcDepthsPass } from './calcDepths.ts';\nimport { UnrollIndicesPass } from './unrollIndices.ts';\nimport { PassCtx } from '../passCtx.ts';\n\nexport class SortPassGPU {\n  private readonly itemCountCeilPwr2: number;\n  private readonly indicesBuffer: GPUBuffer;\n  private readonly distancesBuffer: GPUBuffer;\n\n  private readonly calcDepthsPass: CalcDepthsPass;\n  private readonly bitonicSort: BitonicSort;\n  private readonly unrollIndicesPass: UnrollIndicesPass;\n\n  constructor(device: GPUDevice, splats: GaussianSplats) {\n    this.itemCountCeilPwr2 = nearestPowerOf2_ceil(splats.count);\n\n    const [indicesBuffer, distancesBuffer] = SortPassGPU.createBuffers(\n      device,\n      this.itemCountCeilPwr2\n    );\n    this.indicesBuffer = indicesBuffer;\n    this.distancesBuffer = distancesBuffer;\n\n    // subpasses\n    this.calcDepthsPass = new CalcDepthsPass(\n      device,\n      splats.positionsBuffer,\n      this.distancesBuffer,\n      this.indicesBuffer\n    );\n    this.bitonicSort = new BitonicSort(\n      device,\n      this.itemCountCeilPwr2,\n      this.indicesBuffer,\n      this.distancesBuffer\n    );\n    this.unrollIndicesPass = new UnrollIndicesPass(\n      device,\n      this.indicesBuffer,\n      splats.indicesBuffer,\n      splats.count\n    );\n  }\n\n  private static createBuffers(device: GPUDevice, itemCountCeilPwr2: number) {\n    const indicesBuffer = device.createBuffer({\n      label: 'sortPassGPU.indices-buffer',\n      size: itemCountCeilPwr2 * BYTES_U32,\n      usage: GPUBufferUsage.STORAGE,\n    });\n    const distancesBuffer = device.createBuffer({\n      label: 'sortPassGPU.distances-buffer',\n      size: itemCountCeilPwr2 * BYTES_F32,\n      usage: GPUBufferUsage.STORAGE,\n    });\n    return [indicesBuffer, distancesBuffer];\n  }\n\n  cmdSortByDepth(ctx: PassCtx) {\n    // calculate depth-distances and reset indices\n    this.calcDepthsPass.cmdCalcDepths(ctx);\n\n    // sort by depth\n    this.bitonicSort.cmdSort(ctx);\n\n    // unroll indices to the form the renderer expects\n    this.unrollIndicesPass.cmdUnrollIndices(ctx);\n  }\n}\n", "import { Mat4 } from 'wgpu-matrix';\nimport { GaussianSplats, VERTICES_PER_SPLAT } from '../gaussianSplats.ts';\nimport { calcDepth } from '../utils.ts';\nimport { PassCtx } from './passCtx.ts';\n\nconst DEPTH_MUL = 4096;\nconst SORTING_BINS_COUNT = 256 * 256;\n\nexport class SortPassCPU {\n  private static NAME = SortPassCPU.name;\n\n  private readonly sizeList: Int32Array;\n  private readonly starts0: Uint32Array;\n  private readonly sortedSplatsIndices: Uint32Array;\n  private readonly unroledSortedSplatsIndices: Uint32Array;\n\n  constructor(splats: GaussianSplats) {\n    const splatCount = splats.count;\n    this.sizeList = new Int32Array(splatCount);\n    this.starts0 = new Uint32Array(SORTING_BINS_COUNT);\n    this.sortedSplatsIndices = new Uint32Array(splatCount);\n    this.unroledSortedSplatsIndices = new Uint32Array(\n      splatCount * VERTICES_PER_SPLAT\n    );\n  }\n\n  cmdSortByDepth(ctx: PassCtx) {\n    const { device, mvpMatrix, splats, profiler } = ctx;\n\n    const profilerScope = profiler?.startRegionCpu(SortPassCPU.NAME);\n    const splatCount = splats.count;\n    const [minDepth, maxDepth] = this.calculateDepths(mvpMatrix, splats);\n\n    const depthPerBin = (maxDepth - minDepth) / SORTING_BINS_COUNT;\n    const splatCountPerBin = new Uint32Array(SORTING_BINS_COUNT);\n    for (let i = 0; i < splatCount; i++) {\n      const binIdx = ((this.sizeList[i] - minDepth) / depthPerBin) | 0;\n      this.sizeList[i] = binIdx;\n      splatCountPerBin[binIdx]++;\n    }\n\n    const starts0 = this.starts0;\n    for (let i = 1; i < SORTING_BINS_COUNT; i++) {\n      starts0[i] = starts0[i - 1] + splatCountPerBin[i - 1];\n    }\n\n    for (let i = 0; i < splatCount; i++) {\n      this.sortedSplatsIndices[starts0[this.sizeList[i]]++] = i;\n    }\n\n    unrollSortedSplatIndices(\n      this.sortedSplatsIndices,\n      this.unroledSortedSplatsIndices,\n      splats.count\n    );\n\n    profiler?.endRegionCpu(profilerScope);\n\n    writeUnrolledIndicesToGpu(device, splats, this.unroledSortedSplatsIndices);\n  }\n\n  private calculateDepths(mvpMatrix: Mat4, splats: GaussianSplats) {\n    let maxDepth = -Infinity;\n    let minDepth = Infinity;\n    for (let i = 0; i < splats.count; i++) {\n      let depth = calcDepth(mvpMatrix, splats.positions, 4 * i);\n      depth = Math.floor(depth * DEPTH_MUL);\n      this.sizeList[i] = depth; // converts to int\n      maxDepth = Math.max(maxDepth, depth);\n      minDepth = Math.min(minDepth, depth);\n    }\n    return [minDepth, maxDepth];\n  }\n}\n\nexport function unrollSortedSplatIndices(\n  indices: Uint32Array | number[],\n  unrolledIndicesArray: Uint32Array | number[],\n  splatCount: number\n) {\n  if (splatCount !== indices.length) {\n    throw new Error(\n      `There are ${splatCount} splats, but there are ${indices.length} splat sorted indices. This number should match.`\n    );\n  }\n\n  for (let i = 0; i < splatCount; i++) {\n    const idx = indices[i];\n    for (let j = 0; j < VERTICES_PER_SPLAT; j++) {\n      // content has to be [0,1,2,3,4,5] for each of the splats\n      unrolledIndicesArray[i * VERTICES_PER_SPLAT + j] =\n        idx * VERTICES_PER_SPLAT + j;\n    }\n  }\n}\n\nexport function writeUnrolledIndicesToGpu(\n  device: GPUDevice,\n  splats: GaussianSplats,\n  unrolledIndicesArray: Uint32Array\n) {\n  device.queue.writeBuffer(splats.indicesBuffer, 0, unrolledIndicesArray, 0);\n}\n", "import { CONFIG } from '../constants.ts';\nimport { PassCtx } from './passCtx.ts';\nimport { RenderUniformsBuffer } from './renderUniformsBuffer.ts';\n\nconst CODE = `\nstruct Uniforms {\n  mvpMatrix: mat4x4<f32>,\n  viewMatrix: mat4x4<f32>,\n  scaleModifier: f32,\n};\n@binding(0) @group(0)\nvar<uniform> _uniforms: Uniforms;\n\nconst H:f32 = 0.0;\n\n@vertex\nfn ground_main_vs(\n  @builtin(vertex_index) in_vertex_index : u32\n) -> @builtin(position) vec4f {\n  let squareScale = 1.0;\n  var offsetX = f32(i32(in_vertex_index / 2u ) * 2 - 1); // [-1, -1, 0, 0]\n  var offsetY = f32(i32(in_vertex_index & 1u) * 2 - 1); // [-1, 1, -1, 1, ...]\n  offsetX = offsetX * squareScale;\n  offsetY = offsetY * squareScale;\n\n  var pos = vec4<f32>(offsetX, H, offsetY, 1.);\n  var projectedPosition = _uniforms.mvpMatrix * pos;\n  projectedPosition /= projectedPosition.w;\n  return projectedPosition;\n}\n\n@fragment\nfn ground_main_fs() -> @location(0) vec4f {\n  let c = 0.9;\n  return vec4(c, c, c, 1.0);\n}\n`;\n\nexport class DrawGroundPass {\n  public static NAME: string = DrawGroundPass.name;\n\n  private readonly renderPipeline: GPURenderPipeline;\n  public readonly uniformsBindings: GPUBindGroup;\n\n  constructor(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat,\n    uniforms: RenderUniformsBuffer\n  ) {\n    this.renderPipeline = DrawGroundPass.createRenderPipeline(\n      device,\n      outTextureFormat\n    );\n    this.uniformsBindings = DrawGroundPass.assignResourcesToBindings(\n      device,\n      this.renderPipeline.getBindGroupLayout(0),\n      uniforms\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat\n  ) {\n    const shaderModule = device.createShaderModule({ code: CODE });\n\n    const renderPipeline = device.createRenderPipeline({\n      label: 'splats-render',\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'ground_main_vs',\n        buffers: [],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'ground_main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: {\n        cullMode: 'none',\n        topology: 'triangle-strip',\n        stripIndexFormat: undefined,\n      },\n    });\n\n    return renderPipeline;\n  }\n\n  private static assignResourcesToBindings(\n    device: GPUDevice,\n    uniformsLayout: GPUBindGroupLayout,\n    uniforms: RenderUniformsBuffer\n  ) {\n    return device.createBindGroup({\n      layout: uniformsLayout,\n      entries: [uniforms.createBindingDesc(0)],\n    });\n  }\n\n  draw(ctx: PassCtx, targetTexture: GPUTexture) {\n    const { cmdBuf, profiler } = ctx;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: DrawGroundPass.NAME,\n      colorAttachments: [\n        {\n          view: targetTexture.createView(),\n          loadOp: 'clear',\n          storeOp: 'store',\n          clearValue: [\n            CONFIG.clearColor[0],\n            CONFIG.clearColor[1],\n            CONFIG.clearColor[2],\n            0, // important for blending!\n          ],\n        },\n      ],\n      timestampWrites: profiler?.createScopeGpu(DrawGroundPass.NAME),\n    });\n\n    // set render pass data\n    renderPass.setPipeline(this.renderPipeline);\n    renderPass.setBindGroup(0, this.uniformsBindings);\n    renderPass.draw(4, 1, 0, 0);\n    renderPass.end();\n  }\n}\n", "import { mat4 } from 'wgpu-matrix';\nimport Input from './input.ts';\nimport { CONFIG, CAMERA_CFG } from '../constants.ts';\n\nexport interface CameraOpts {\n  position?: [number, number, number];\n  target?: [number, number, number];\n}\n\n// deno-lint-ignore no-explicit-any\ntype Mat4 = any;\n\nconst UP = [0, -1, 0]; // do not ask..\n\nexport class Camera2 {\n  public readonly viewMatrix: Mat4;\n\n  constructor(\n    options: Pick<typeof CAMERA_CFG, 'position' | 'target'> = CAMERA_CFG\n  ) {\n    this.viewMatrix = mat4.lookAt(options.position, options.target, UP);\n  }\n\n  private translate(x: number, y: number, z: number) {\n    const viewInv = mat4.inverse(this.viewMatrix);\n    mat4.translate(viewInv, [x, y, z], viewInv);\n    mat4.inverse(viewInv, this.viewMatrix);\n  }\n\n  private rotate(x: number, y: number, z: number) {\n    const viewInv = mat4.inverse(this.viewMatrix);\n    mat4.rotateX(viewInv, y, viewInv);\n    mat4.rotateY(viewInv, x, viewInv);\n    mat4.rotateZ(viewInv, z, viewInv);\n    mat4.inverse(viewInv, this.viewMatrix);\n  }\n\n  update(deltaTime: number, input: Input): Mat4 {\n    const sign = (positive: boolean, negative: boolean) =>\n      (positive ? 1 : 0) - (negative ? 1 : 0);\n\n    const m = deltaTime * CONFIG.movementSpeed;\n    const digital = input.directions;\n    const deltaRight = m * sign(digital.right, digital.left);\n    const deltaUp = m * sign(digital.up, digital.down);\n    const deltaBack = m * sign(digital.backward, digital.forward);\n    this.translate(deltaRight, deltaUp, deltaBack);\n\n    let yaw = input.mouse.x * deltaTime * CONFIG.rotationSpeed;\n    let pitch = input.mouse.y * deltaTime * CONFIG.rotationSpeed;\n    yaw = mod(yaw, Math.PI * 2);\n    pitch = clamp(pitch, -Math.PI / 2, Math.PI / 2);\n    this.rotate(-yaw, -pitch, 0);\n  }\n}\n\nfunction clamp(x: number, min: number, max: number): number {\n  return Math.min(Math.max(x, min), max);\n}\n\nfunction mod(x: number, div: number): number {\n  return x - Math.floor(Math.abs(x) / div) * div * Math.sign(x);\n}\n", "import { GaussianSplats, VERTICES_PER_SPLAT } from '../gaussianSplats.ts';\nimport { calcDepth, createArray } from '../utils.ts';\nimport {\n  unrollSortedSplatIndices,\n  writeUnrolledIndicesToGpu,\n} from './sortPassCPU.ts';\nimport { PassCtx } from './passCtx.ts';\n\ninterface Item {\n  depth: number;\n  idx: number;\n}\n\nexport class SortPassCPU_Naive {\n  private static NAME = SortPassCPU_Naive.name;\n\n  private readonly arrayToSort: Item[];\n  private readonly sortedSplatsIndices: Uint32Array;\n  private readonly unroledSortedSplatsIndices: Uint32Array;\n\n  constructor(splats: GaussianSplats) {\n    const splatCount = splats.count;\n    this.arrayToSort = createArray(splatCount).map((_) => ({\n      depth: 0,\n      idx: 0,\n    }));\n    this.sortedSplatsIndices = new Uint32Array(splatCount);\n    this.unroledSortedSplatsIndices = new Uint32Array(\n      splatCount * VERTICES_PER_SPLAT\n    );\n  }\n\n  cmdSortByDepth(ctx: PassCtx) {\n    const { device, mvpMatrix, splats, profiler } = ctx;\n    const profilerScope = profiler?.startRegionCpu(SortPassCPU_Naive.NAME);\n\n    // recalc depts\n    this.arrayToSort.forEach((e, idx) => {\n      e.idx = idx;\n      e.depth = calcDepth(mvpMatrix, splats.positions, 4 * idx);\n    });\n\n    // naive JS sort\n    this.arrayToSort.sort((a, b) => {\n      return b.depth - a.depth;\n    });\n\n    // flatten so we can reuse utils\n    this.arrayToSort.forEach((e, idx) => {\n      this.sortedSplatsIndices[idx] = e.idx;\n    });\n\n    unrollSortedSplatIndices(\n      this.sortedSplatsIndices,\n      this.unroledSortedSplatsIndices,\n      splats.count\n    );\n\n    profiler?.endRegionCpu(profilerScope);\n\n    writeUnrolledIndicesToGpu(device, splats, this.unroledSortedSplatsIndices);\n  }\n}\n", "import { Mat4 } from 'wgpu-matrix';\n\nimport { RenderUniformsBuffer } from './passes/renderUniformsBuffer.ts';\nimport { RenderSplatsGEO } from './passes/renderSplatsGEO.ts';\nimport {\n  Dimensions,\n  createCameraProjectionMat,\n  getModelViewProjectionMatrix,\n} from './utils.ts';\nimport Input from './web/input.ts';\nimport { GaussianSplats } from './gaussianSplats.ts';\nimport { CAMERA_CFG, CONFIG } from './constants.ts';\nimport { SortPassGPU } from './passes/sortPassGPU/index.ts';\nimport { BitonicSort } from './passes/sortPassGPU/bitonicSort.ts';\nimport { CalcDepthsPass } from './passes/sortPassGPU/calcDepths.ts';\nimport { UnrollIndicesPass } from './passes/sortPassGPU/unrollIndices.ts';\nimport { SortPassCPU } from './passes/sortPassCPU.ts';\nimport { DrawGroundPass } from './passes/drawGroundPass.ts';\nimport { Camera2 } from './web/camera2.ts';\nimport { SortPassCPU_Naive } from './passes/sortPassCPU_Naive.ts';\nimport { PassCtx } from './passes/passCtx.ts';\n\nexport interface ShadersTexts {\n  splatPassShader: string;\n  // sort\n  sortBitonicShader: string;\n  sortCalcDeptsShader: string;\n  sortUnrollIndicesShader: string;\n}\n\n/** Web and Deno handle files differently. A bit awkward but good enough. */\nexport function injectShaderTexts(texts: ShadersTexts) {\n  RenderSplatsGEO.SHADER_CODE = texts.splatPassShader;\n  BitonicSort.SHADER_CODE = texts.sortBitonicShader;\n  CalcDepthsPass.SHADER_CODE = texts.sortCalcDeptsShader;\n  UnrollIndicesPass.SHADER_CODE = texts.sortUnrollIndicesShader;\n}\n\nexport class Renderer {\n  private readonly renderUniformBuffer: RenderUniformsBuffer;\n  private readonly cameraCtrl: Camera2;\n  private projectionMat: Mat4;\n\n  // passes\n  private readonly splatPass: RenderSplatsGEO;\n  private readonly sortPassGPU: SortPassGPU;\n  private readonly sortPassCPU: SortPassCPU;\n  private readonly sortPassCPU_Naive: SortPassCPU_Naive;\n  private readonly drawGroundPass: DrawGroundPass;\n\n  constructor(\n    device: GPUDevice,\n    viewportSize: Dimensions,\n    preferredCanvasFormat: GPUTextureFormat,\n    splats: GaussianSplats\n  ) {\n    this.renderUniformBuffer = new RenderUniformsBuffer(device);\n\n    this.splatPass = new RenderSplatsGEO(\n      device,\n      preferredCanvasFormat,\n      this.renderUniformBuffer,\n      splats\n    );\n    this.sortPassGPU = new SortPassGPU(device, splats);\n    this.sortPassCPU = new SortPassCPU(splats);\n    this.sortPassCPU_Naive = new SortPassCPU_Naive(splats);\n    this.drawGroundPass = new DrawGroundPass(\n      device,\n      preferredCanvasFormat,\n      this.renderUniformBuffer\n    );\n\n    this.cameraCtrl = new Camera2(CAMERA_CFG);\n    this.projectionMat = createCameraProjectionMat(viewportSize);\n  }\n\n  updateCamera(deltaTime: number, input: Input): Mat4 {\n    this.cameraCtrl.update(deltaTime, input);\n  }\n\n  onCanvasResize = (viewportSize: Dimensions) => {\n    this.projectionMat = createCameraProjectionMat(viewportSize);\n  };\n\n  cmdRender(\n    _ctx: Pick<\n      PassCtx,\n      'device' | 'cmdBuf' | 'splats' | 'profiler' | 'viewport'\n    >,\n    targetTexture: GPUTexture\n  ) {\n    const viewMatrix = this.cameraCtrl.viewMatrix;\n    const mvpMatrix = getModelViewProjectionMatrix(\n      viewMatrix,\n      this.projectionMat\n    );\n    const ctx: PassCtx = {\n      ..._ctx,\n      viewMatrix,\n      mvpMatrix,\n      projMatrix: this.projectionMat,\n      focalX: this.projectionMat[0] * _ctx.viewport.width * 0.5,\n      focalY: this.projectionMat[5] * _ctx.viewport.height * 0.5,\n    };\n\n    // sort by depth\n    // https://www.sctheblog.com/blog/gaussian-splatting/#sorting-and-the-index-buffer\n    if (CONFIG.sortMethod === 'CPU') {\n      this.sortPassCPU.cmdSortByDepth(ctx);\n    } else if (CONFIG.sortMethod === 'CPU_NAIVE') {\n      this.sortPassCPU_Naive.cmdSortByDepth(ctx);\n    } else {\n      this.sortPassGPU.cmdSortByDepth(ctx);\n    }\n\n    this.renderUniformBuffer.update(ctx);\n\n    let splatsLoadOp: GPULoadOp = 'clear';\n    if (CONFIG.drawGround) {\n      this.drawGroundPass.draw(ctx, targetTexture);\n      splatsLoadOp = 'load';\n    }\n    this.splatPass.draw(ctx, targetTexture, splatsLoadOp);\n  }\n}\n", "import { BYTES_F32, BYTES_U32, BYTES_U8 } from '../constants.ts';\nimport {\n  GaussianSplats,\n  SPLAT_SIZE_BYTES,\n  VERTICES_PER_SPLAT,\n} from '../gaussianSplats.ts';\nimport { makeUint, createGPUBuffer } from '../utils.ts';\n\nconst OFFSET_SCALE = 3 * BYTES_F32;\nconst OFFSET_COLOR = OFFSET_SCALE + 3 * BYTES_F32;\nconst OFFSET_ROTATION = OFFSET_COLOR + 4 * BYTES_U8;\nconst offsetBytesToOffsetF32 = (e: number) => e / BYTES_F32;\n\n/**\n * https://github.com/antimatter15/splat/blob/main/main.js#L1391\n */\nexport function parseFileSplat(\n  device: GPUDevice,\n  data: Uint8Array\n): GaussianSplats {\n  const dataBytesCnt = data.length;\n  const splatCount = dataBytesCnt / SPLAT_SIZE_BYTES;\n  console.log(`bytes: ${data.length} splats: ${splatCount}`);\n\n  // careful to REINTERPRET the data, instead of element-wise cast!\n  const dataF32 = new Float32Array(data.buffer);\n  if (dataF32.length !== data.length / 4) {\n    throw new Error(\n      `File bytes (${data.length}) could not be reinterpreted as floats`\n    );\n  }\n\n  const positions = new Float32Array(splatCount * 4);\n  const scales = new Float32Array(splatCount * 4);\n  const rotations = new Float32Array(splatCount * 4);\n  const colors = new Uint32Array(splatCount);\n\n  for (let i = 0; i < splatCount; i++) {\n    const offsetBytes = i * SPLAT_SIZE_BYTES;\n    const offsetBytesIntoF32 = offsetBytesToOffsetF32(offsetBytes);\n\n    positions[i * 4 + 0] = dataF32[offsetBytesIntoF32];\n    positions[i * 4 + 1] = dataF32[offsetBytesIntoF32 + 1];\n    positions[i * 4 + 2] = dataF32[offsetBytesIntoF32 + 2];\n    positions[i * 4 + 3] = 1; // IMPORTANT!\n    const offsetScaleF32 = offsetBytesToOffsetF32(OFFSET_SCALE);\n    scales[i * 4 + 0] = dataF32[offsetBytesIntoF32 + offsetScaleF32];\n    scales[i * 4 + 1] = dataF32[offsetBytesIntoF32 + offsetScaleF32 + 1];\n    scales[i * 4 + 2] = dataF32[offsetBytesIntoF32 + offsetScaleF32 + 2];\n    scales[i * 4 + 3] = 1;\n    const r = (x: number) => (x - 128.0) / 128.0;\n    rotations[i * 4 + 0] = r(data[offsetBytes + OFFSET_ROTATION]);\n    rotations[i * 4 + 1] = r(data[offsetBytes + OFFSET_ROTATION + 1]);\n    rotations[i * 4 + 2] = r(data[offsetBytes + OFFSET_ROTATION + 2]);\n    rotations[i * 4 + 3] = r(data[offsetBytes + OFFSET_ROTATION + 3]);\n\n    colors[i] = makeUint(\n      data[offsetBytes + OFFSET_COLOR],\n      data[offsetBytes + OFFSET_COLOR + 1],\n      data[offsetBytes + OFFSET_COLOR + 2],\n      data[offsetBytes + OFFSET_COLOR + 3]\n    );\n  }\n\n  printPositionsStats(positions);\n\n  const usage: GPUBufferUsageFlags =\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n  const positionsBuffer = createGPUBuffer(\n    device,\n    'splats-positions',\n    usage,\n    positions\n  );\n  const rotationsBuffer = createGPUBuffer(\n    device,\n    'splats-rotations',\n    usage,\n    rotations\n  );\n  const scalesBuffer = createGPUBuffer(device, 'splats-scales', usage, scales);\n  const colorsBuffer = createGPUBuffer(device, 'splats-colors', usage, colors);\n\n  const indicesBuffer = device.createBuffer({\n    label: 'splats-indices',\n    size: splatCount * VERTICES_PER_SPLAT * BYTES_U32,\n    usage:\n      GPUBufferUsage.INDEX | GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n  });\n\n  return {\n    count: splatCount,\n    positions,\n    positionsBuffer,\n    colorsBuffer,\n    rotationsBuffer,\n    scalesBuffer,\n    indicesBuffer,\n  };\n}\n\nfunction printPositionsStats(data: Float32Array) {\n  const maxCo = [data[0], data[1], data[2]];\n  const minCo = [data[0], data[1], data[2]];\n  const splatCount = data.length / 4;\n\n  for (let i = 0; i < splatCount; i++) {\n    const offset = i * 4;\n    for (let co = 0; co < 3; co++) {\n      maxCo[co] = Math.max(maxCo[co], data[offset + co]);\n      minCo[co] = Math.min(minCo[co], data[offset + co]);\n    }\n  }\n\n  const p = (a: number[]) => '[' + a.map((x) => x.toFixed(2)).join(',') + ']';\n  console.log(`Bounding box min:`, p(minCo));\n  console.log(`Bounding box max:`, p(maxCo));\n}\n", "import { lerp } from '../utils.ts';\n\nconst DELTA_SMOOTHING = 0.9;\nconst UPDATE_FREQ_MS = 1000;\n\nexport function initFPSCounter() {\n  const parentEl = document.getElementById('stats-window');\n  const fpsEl = document.createElement('p');\n  const msEl = document.createElement('p');\n  parentEl.appendChild(fpsEl);\n  parentEl.appendChild(msEl);\n  parentEl.style.display = 'block';\n\n  let frameStart = performance.now();\n  let smoothDelta: number | undefined = undefined;\n  let lastDOMUpdate: number = frameStart;\n\n  return [\n    () => {\n      frameStart = performance.now();\n    },\n    () => {\n      const frameEnd = performance.now();\n      const deltaMs = frameEnd - frameStart;\n      if (smoothDelta === undefined) {\n        smoothDelta = deltaMs;\n      } else {\n        smoothDelta = lerp(smoothDelta, deltaMs, 1 - DELTA_SMOOTHING);\n      }\n\n      if (frameEnd - lastDOMUpdate > UPDATE_FREQ_MS) {\n        lastDOMUpdate = frameEnd;\n        updateDOM();\n      }\n    },\n  ];\n\n  function updateDOM() {\n    if (smoothDelta === undefined) return;\n\n    const fps = (1.0 / smoothDelta) * 1000;\n    fpsEl.innerHTML = `${fps.toFixed(2)} fps`;\n    msEl.innerHTML = `${smoothDelta.toFixed(2)}ms`;\n  }\n}\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0\n            )\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    });\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n      {\n        const clientX = params.x || params.clientX || 0;\n        const clientY = params.y || params.clientY || 0;\n        evt.initMouseEvent(eventType, params.bubbles || false,\n          params.cancelable || true, window, params.clickCount || 1,\n          0, // screen X\n          0, // screen Y\n          clientX, // client X\n          clientY, // client Y\n          false, false, false, false, 0, null);\n        break;\n      }\n      case 'KeyboardEvents':\n      {\n        const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n        common.defaults(params, {\n          cancelable: true,\n          ctrlKey: false,\n          altKey: false,\n          shiftKey: false,\n          metaKey: false,\n          keyCode: undefined,\n          charCode: undefined\n        });\n        init(eventType, params.bubbles || false,\n          params.cancelable, window,\n          params.ctrlKey, params.altKey,\n          params.shiftKey, params.metaKey,\n          params.keyCode, params.charCode);\n        break;\n      }\n      default:\n      {\n        evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n        break;\n      }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n      //      width: '120px',\n      textAlign: 'center',\n      //      padding: '4px',\n      //      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n", "const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n          arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from './dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n    //    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n    //    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n  //    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          }\n        );\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n", "import * as dat from 'dat.gui';\nimport { CONFIG } from '../constants.ts';\nimport { GpuProfiler, GpuProfilerResult } from '../gpuProfiler.ts';\n\n// https://github.com/Scthe/WebFX/blob/master/src/UISystem.ts#L13\n\nexport function initializeGUI(profiler: GpuProfiler) {\n  const gui = new dat.GUI();\n\n  const dummyObject = {\n    openGithub: () => {\n      window.location.href = CONFIG.githubRepoLink;\n    },\n    profile: () => {\n      profiler.profileNextFrame(true);\n    },\n  };\n\n  // github\n  gui.add(dummyObject, 'openGithub').name('GITHUB');\n\n  // bg\n  addColorController(CONFIG, 'clearColor', 'Bg color');\n\n  // sorting method\n  const sortModeDummy = createDummy(CONFIG, 'sortMethod', [\n    { label: 'GPU', value: 'GPU' },\n    { label: 'CPU Counting sort', value: 'CPU' },\n    { label: 'CPU .sort', value: 'CPU_NAIVE' },\n  ]);\n  gui.add(sortModeDummy, 'sortMethod', sortModeDummy.values).name('Sorting');\n\n  // render method\n  const renderModeDummy = createDummy(CONFIG, 'renderMethod', [\n    { label: 'Eigenvectors', value: 'EIGENVECTORS' },\n    { label: 'Square billboard', value: 'SQUARE_BILLBOARD' },\n  ]);\n  gui\n    .add(renderModeDummy, 'renderMethod', renderModeDummy.values)\n    .name('Render');\n\n  // splat scale\n  gui.add(CONFIG, 'scaleModifier', 0, 2.0).name('Splat scale');\n\n  // ground\n  gui.add(CONFIG, 'drawGround').name('Draw ground');\n\n  // profiler\n  gui.add(dummyObject, 'profile').name('Profile');\n\n  //////////////\n  /// utils\n  function addColorController<T extends object>(\n    obj: T,\n    prop: keyof T,\n    name: string\n  ) {\n    const dummy = {\n      value: [] as number[],\n    };\n\n    Object.defineProperty(dummy, 'value', {\n      enumerable: true,\n      get: () => {\n        // deno-lint-ignore no-explicit-any\n        const v = obj[prop] as any;\n        return [v[0] * 255, v[1] * 255, v[2] * 255];\n      },\n      set: (v: number[]) => {\n        // deno-lint-ignore no-explicit-any\n        const a = obj[prop] as any as number[];\n        a[0] = v[0] / 255;\n        a[1] = v[1] / 255;\n        a[2] = v[2] / 255;\n      },\n    });\n\n    gui.addColor(dummy, 'value').name(name);\n  }\n}\n\ninterface UiOpts<T> {\n  label: string;\n  value: T;\n}\n\nconst createDummy = <V extends Object, K extends keyof V>(\n  obj: V,\n  key: K,\n  opts: UiOpts<V[K]>[]\n) => {\n  const dummy = {\n    values: opts.map((o) => o.label),\n  };\n\n  Object.defineProperty(dummy, key, {\n    enumerable: true,\n    get: () => {\n      const v = obj[key];\n      const opt = opts.find((e) => e.value === v) || opts[0];\n      return opt.label;\n    },\n    set: (selectedLabel: string) => {\n      const opt = opts.find((e) => e.label === selectedLabel) || opts[0];\n      obj[key] = opt.value;\n    },\n  });\n\n  return dummy;\n};\n\nexport function onGpuProfilerResult(result: GpuProfilerResult) {\n  console.log('Profiler:', result);\n  const parentEl = document.getElementById('profiler-results');\n  parentEl.innerHTML = '';\n  parentEl.parentNode.style.display = 'block';\n\n  const mergeByName: Record<string, number> = {};\n  const names = new Set<string>();\n  result.forEach(([name, timeMs]) => {\n    const t = mergeByName[name] || 0;\n    mergeByName[name] = t + timeMs;\n    names.add(name);\n  });\n\n  names.forEach((name) => {\n    const timeMs = mergeByName[name];\n    const li = document.createElement('li');\n    li.innerHTML = `${name}: ${timeMs.toFixed(2)}ms`;\n    parentEl.appendChild(li);\n  });\n}\n", "import { BYTES_U64 } from './constants.ts';\n\nconst NANO_TO_MILISECONDS = 0.000001;\n\n/// Big amount of queries to never have to carry about it\nconst MAX_QUERY_COUNT = 1024;\n/// Each pass has BEGIN and END timestamp query\nconst QUERIES_PER_PASS = 2;\nconst TOTAL_MAX_QUERIES = MAX_QUERY_COUNT * QUERIES_PER_PASS;\n\ntype GpuProfilerResultItem = [string, number];\nexport type GpuProfilerResult = Array<[string, number]>;\n\nexport type ProfilerRegionId = number | undefined;\n\n/**\n * https://github.com/Scthe/Rust-Vulkan-TressFX/blob/master/src/gpu_profiler.rs\n *\n * webgpu API: https://webgpufundamentals.org/webgpu/lessons/webgpu-timing.html\n */\nexport class GpuProfiler {\n  private _profileThisFrame = false;\n  private readonly hasRequiredFeature: boolean;\n  private readonly queryPool: GPUQuerySet;\n  private readonly queryInProgressBuffer: GPUBuffer;\n  private readonly resultsBuffer: GPUBuffer;\n\n  private currentFrameScopes: Array<[string, 'cpu' | 'gpu', number]> = [];\n\n  get enabled() {\n    return this._profileThisFrame && this.hasRequiredFeature;\n  }\n\n  constructor(device: GPUDevice) {\n    this.hasRequiredFeature = device.features.has('timestamp-query');\n    if (!this.hasRequiredFeature) {\n      // we should never use them if no feature available\n      this.queryPool = undefined!;\n      this.queryInProgressBuffer = undefined!;\n      this.resultsBuffer = undefined!;\n      return;\n    }\n\n    this.queryPool = device.createQuerySet({\n      type: 'timestamp',\n      count: TOTAL_MAX_QUERIES,\n    });\n\n    this.queryInProgressBuffer = device.createBuffer({\n      label: 'profiler-in-progress',\n      size: this.queryPool.count * BYTES_U64,\n      usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC,\n    });\n    this.resultsBuffer = device.createBuffer({\n      label: 'profiler-results',\n      size: this.queryInProgressBuffer.size,\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n    });\n  }\n\n  profileNextFrame(enabled: boolean) {\n    this._profileThisFrame = enabled;\n  }\n\n  beginFrame() {\n    while (this.currentFrameScopes.length > 0) {\n      this.currentFrameScopes.pop();\n    }\n  }\n\n  endFrame(cmdBuf: GPUCommandEncoder) {\n    if (!this.enabled) {\n      return;\n    }\n\n    const queryCount = this.currentFrameScopes.length * QUERIES_PER_PASS;\n    cmdBuf.resolveQuerySet(\n      this.queryPool,\n      0,\n      queryCount,\n      this.queryInProgressBuffer,\n      0\n    );\n    if (this.resultsBuffer.mapState === 'unmapped') {\n      cmdBuf.copyBufferToBuffer(\n        this.queryInProgressBuffer,\n        0,\n        this.resultsBuffer,\n        0,\n        this.resultsBuffer.size\n      );\n    }\n  }\n\n  async scheduleRaportIfNeededAsync(onResult?: (e: GpuProfilerResult) => void) {\n    if (!this.enabled || this.currentFrameScopes.length == 0) {\n      this._profileThisFrame = false;\n      return;\n    }\n\n    this._profileThisFrame = false;\n    const scopeNames = this.currentFrameScopes.slice();\n\n    if (this.resultsBuffer.mapState === 'unmapped') {\n      await this.resultsBuffer.mapAsync(GPUMapMode.READ);\n      const times = new BigInt64Array(this.resultsBuffer.getMappedRange());\n      const result = scopeNames.map(\n        ([name, type, cpuTime], idx): GpuProfilerResultItem => {\n          let time = 0;\n          if (type === 'gpu') {\n            const start = times[idx * QUERIES_PER_PASS];\n            const end = times[idx * QUERIES_PER_PASS + 1];\n            time = Number(end - start) * NANO_TO_MILISECONDS;\n          } else {\n            time = cpuTime;\n          }\n          return [name, time];\n        }\n      );\n      this.resultsBuffer.unmap();\n\n      onResult?.(result);\n    }\n  }\n\n  /** Provide to beginCompute/beginRenderPass's `timestampWrites` */\n  createScopeGpu(name: string): GPURenderPassTimestampWrites | undefined {\n    if (!this.enabled) {\n      return undefined;\n    }\n\n    const queryId = this.currentFrameScopes.length;\n    this.currentFrameScopes.push([name, 'gpu', 0]);\n\n    return {\n      querySet: this.queryPool,\n      beginningOfPassWriteIndex: queryId * QUERIES_PER_PASS,\n      endOfPassWriteIndex: queryId * QUERIES_PER_PASS + 1,\n    };\n  }\n\n  /*\n  NOTE: The geniuses actually removed this feature... WTF?!\n\n  /**If you want to start/end code block manually * /\n  startRegionGpu(cmdBuf: GPUCommandEncoder, name: string): ProfilerRegionId {\n    if (!this.enabled) {\n      return undefined;\n    }\n\n    const queryId = this.currentFrameScopes.length;\n    this.currentFrameScopes.push([name, 'gpu', 0]);\n    cmdBuf.writeTimestamp(this.queryPool, queryId * 2);\n\n    return queryId;\n  }\n\n  endRegionGpu(cmdBuf: GPUCommandEncoder, token: ProfilerRegionId) {\n    if (!this.enabled || token === undefined) return;\n\n    cmdBuf.writeTimestamp(this.queryPool, token * 2 + 1);\n  }\n  */\n\n  startRegionCpu(name: string): ProfilerRegionId {\n    if (!this.enabled) {\n      return undefined;\n    }\n\n    const queryId = this.currentFrameScopes.length;\n    const now = performance.now();\n    this.currentFrameScopes.push([name, 'cpu', now]);\n    return queryId;\n  }\n\n  endRegionCpu(token: ProfilerRegionId) {\n    if (!this.enabled || token === undefined) return;\n\n    const el = this.currentFrameScopes[token];\n    if (el) {\n      const [_, _2, start] = el;\n      const end = performance.now();\n      el[2] = end - start;\n    }\n  }\n}\n", "import { Dimensions } from '../utils.ts';\n\nexport type ResizeHandler = (viewportSize: Dimensions) => void;\n\nexport function initCanvasResizeSystem(canvas: HTMLCanvasElement) {\n  const sizeNow = getViewportSize();\n  canvas.width = sizeNow.width;\n  canvas.height = sizeNow.height;\n  console.log('Init canvas size:', sizeNow);\n\n  const listeners: ResizeHandler[] = [];\n\n  return { revalidateCanvasSize, addListener, getViewportSize };\n\n  function addListener(f: ResizeHandler) {\n    listeners.push(f);\n  }\n\n  function revalidateCanvasSize() {\n    const sizeNow = getViewportSize();\n    const hasChanged =\n      sizeNow.width !== canvas.width || sizeNow.height !== canvas.height;\n\n    if (hasChanged && sizeNow.width && sizeNow.height) {\n      applyResize(sizeNow);\n    }\n  }\n\n  function applyResize(d: Dimensions) {\n    console.log('Canvas resize:', d);\n    canvas.width = d.width;\n    canvas.height = d.height;\n    listeners.forEach((l) => l(d));\n  }\n\n  function getViewportSize(): Dimensions {\n    // deno-lint-ignore no-explicit-any\n    const devicePixelRatio = (window as any).devicePixelRatio || 1;\n    return {\n      width: canvas.clientWidth * devicePixelRatio,\n      height: canvas.clientHeight * devicePixelRatio,\n    };\n  }\n}\n", "struct Uniforms {\n    mvpMatrix: mat4x4<f32>,\n    viewMatrix: mat4x4<f32>,\n    projMatrix: mat4x4<f32>,\n    viewportAndFocals: vec4f,\n    scaleModifier: f32,\n};\n@binding(0) @group(0)\nvar<uniform> _uniforms: Uniforms;\n\n@group(0) @binding(1)\nvar<storage, read> _splatPositions: array<vec4f>;\n@group(0) @binding(2)\nvar<storage, read> _splatRotations: array<vec4f>;\n@group(0) @binding(3)\nvar<storage, read> _splatScales: array<vec4f>;\n@group(0) @binding(4)\nvar<storage, read> _splatColors: array<u32>;\n\n\nfn checkIsCulled(projectedPosition: vec4f) -> bool {\n  let x = projectedPosition.x;\n  let y = projectedPosition.y;\n  let z = projectedPosition.z;\n  let clipZ = projectedPosition.w;\n  let clip = 1.2 * projectedPosition.w;\n  return z < -clipZ || z > clipZ ||\n    x < -clip || x > clip ||\n    y < -clip || y > clip;\n}\n\n/**\n * https://www.sctheblog.com/blog/gaussian-splatting/#covariance-3d\n */\nfn sigmaFromScaleAndRotation(scale: vec3<f32>, rot: vec4<f32>) -> mat3x3<f32> {\n    let sMod = _uniforms.scaleModifier;\n    let S = mat3x3<f32>(\n        sMod*scale.x, 0.0, 0.0,\n        0.0, sMod*scale.y, 0.0,\n        0.0, 0.0, sMod*scale.z,\n    );\n\n    // quaternion to rotation matrix\n    // Eq. 10, the usual stuff\n    // https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation\n    let r = rot.x;\n    let x = rot.y; // i\n    let y = rot.z; // j\n    let z = rot.w; // k\n    var R = mat3x3<f32>(\n        1. - 2. * (y * y + z * z), 2. * (x * y - r * z), 2. * (x * z + r * y),\n        2. * (x * y + r * z), 1. - 2. * (x * x + z * z), 2. * (y * z - r * x),\n        2. * (x * z - r * y), 2. * (y * z + r * x), 1. - 2. * (x * x + y * y),\n    );\n    R = transpose(R); // invert (it's rotation matrix after all). Left/right-handed conversion when compared to paper.\n\n    // Equation 6 from \"3D Gaussian Splatting for Real-Time Radiance Field Rendering\"\n    // \"The covariance matrix \u03A3 of a 3D Gaussian is analogous to describing\n    // the configuration of an ellipsoid. Given a scaling matrix S and\n    // rotation matrix R, we can find the corresponding \u03A3:\n    // $\\Sigma = R * S * S^T * R^T$\"\n    // PS. We are transposing scale matrix. O tempora, o mores!\n    let Sigma = R * S * transpose(S) * transpose(R);\n    return Sigma;\n} \n\n/** \n * https://www.sctheblog.com/blog/gaussian-splatting/#covariance-2d\n */\nfn sigmaPrimCov2d(position: vec3<f32>, scale: vec3<f32>, rot: vec4<f32>) -> mat2x2<f32> {\n    let sigma3x3 = sigmaFromScaleAndRotation(scale, rot);\n\n    // t := posViewSpace\n    var t = _uniforms.viewMatrix * vec4<f32>(position, 1.0);\n\n    // Jacobian of the affine approximation of the projective transformation\n    let focalX = _uniforms.viewportAndFocals[2];\n    let focalY = _uniforms.viewportAndFocals[3];\n    var J = mat4x4(\n        focalX / t.z, 0.,           -(focalX * t.x) / (t.z * t.z), 0.,\n        0.,           focalY / t.z, -(focalY * t.y) / (t.z * t.z), 0.,\n        0., 0., 0., 0.,\n        0., 0., 0., 0.,\n    );\n    // J = _uniforms.projMatrix; // For blog post photo\n    J = transpose(J); // Left/right-handed conversion when compared to paper. Must match viewMatrix's\n\n    // Equation (5)\n    // $\\sigma' = J * W * \\sigma * W^T * J^T$\n    // We go into the world space, apply sigma (so rotation+scale transforms),\n    // and then go back\n    let W = _uniforms.viewMatrix;\n    let sigma4x4 = mat4x4(\n        // covariance matrices are symmetric, so I don't have to care if row-col idx order is ok\n        sigma3x3[0][0], sigma3x3[0][1], sigma3x3[0][2], 0.,\n        sigma3x3[1][0], sigma3x3[1][1], sigma3x3[1][2], 0.,\n        sigma3x3[2][0], sigma3x3[2][1], sigma3x3[2][2], 0.,\n        0., 0., 0., 0.,\n    );\n    var sigma2d = J * W * sigma4x4 * transpose(W) * transpose(J);\n\n    // Copied from reference impl.\n    // https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/59f5f77e3ddbac3ed9db93ec2cfe99ed6c5d121d/cuda_rasterizer/forward.cu#L108\n    // \"Apply low-pass filter: every Gaussian should be at least one pixel wide/high.\"\n    // It probably also guarantees sigma2d is invertible?\n    sigma2d[0][0] += 0.3;\n    sigma2d[1][1] += 0.3;\n\n    // Discard 3rd and 4th row and column.\n    // From \"EWA Splatting\", below equation (23) - https://www.cs.umd.edu/~zwicker/publications/EWASplatting-TVCG02.pdf :\n    // \"The 2x2 variance matrix V^ is easily obtained from the 3D matrix V\n    // by skipping the third row and column\"\n    // New matrix is a bit wasteful, but matches math nicer\n    let sigmaPrim = mat2x2(\n      sigma2d[0][0], sigma2d[0][1],\n      sigma2d[1][0], sigma2d[1][1],\n    );\n    return sigmaPrim;\n}\n\n/**\n * https://www.sctheblog.com/blog/gaussian-splatting/#calculating-eigenvalues\n * \n * I remember in high school they said:\n * \"When in the real world you will make use of quadratic equation?\"\n */\nfn calcEigenvalues(a: f32, b: f32, c: f32) -> vec2f {\n  let delta = sqrt(a*a - 2*a*c + 4*b*b + c*c);\n  let lambda1 = 0.5 * (a+c + delta);\n  let lambda2 = 0.5 * (a+c - delta);\n  return vec2f(lambda1, lambda2);\n}\n\nconst BILLBOARD_VERTICES = array<vec2<f32>, 6>(\n    vec2<f32>(-1.0, -1.0),\n    vec2<f32>(-1.0, 1.0),\n    vec2<f32>(1.0, -1.0),\n    vec2<f32>(1.0, 1.0),\n    vec2<f32>(-1.0, 1.0),\n    vec2<f32>(1.0, -1.0),\n);\n\nstruct Gaussian {\n  vertexInSplatIdx: u32,\n  splatIdx: u32,\n  worldPos: vec4f,\n  scale: vec3f,\n  rot: vec4f,\n  color: vec4f,\n  quadOffset: vec2f,\n};\n\nfn readGaussian(in_vertex_index: u32) -> Gaussian {\n  var result: Gaussian;\n  result.vertexInSplatIdx = in_vertex_index % 6u;\n  result.splatIdx = in_vertex_index / 6u;\n  result.worldPos = _splatPositions[result.splatIdx];\n  result.scale = _splatScales[result.splatIdx].xyz;\n  result.rot = _splatRotations[result.splatIdx];\n  let splatColor = _splatColors[result.splatIdx];\n  result.color = vec4<f32>(\n    f32((splatColor >> 24) & 0xff) / 255.0,\n    f32((splatColor >> 16) & 0xff) / 255.0,\n    f32((splatColor >> 8 ) & 0xff) / 255.0,\n    f32((splatColor      ) & 0xff) / 255.0,\n  );\n  result.quadOffset = BILLBOARD_VERTICES[result.vertexInSplatIdx];\n  return result;\n}\n\n\n///////////////////////////\n/// Eigenvectors version\n/// https://www.sctheblog.com/blog/gaussian-splatting/#method-2-calculate-eigenvectors\n\nstruct VertexOutputEigenvectors {\n  @builtin(position) position: vec4<f32>,\n  @location(0) splatColor: vec4<f32>,\n  @location(1) quadOffset: vec2<f32>,\n};\n\n@vertex\nfn vs_mainEigenvectors(\n  @builtin(vertex_index) in_vertex_index: u32,\n) -> VertexOutputEigenvectors {\n  var result: VertexOutputEigenvectors;\n  let g = readGaussian(in_vertex_index);\n  let viewportWidth = _uniforms.viewportAndFocals[0];\n  let viewportHeight =_uniforms.viewportAndFocals[1];\n  let viewport = vec2(viewportWidth, viewportHeight);\n\n  // projection\n  var projectedPosition = _uniforms.mvpMatrix * g.worldPos;\n  if (checkIsCulled(projectedPosition)) {\n    result.splatColor.w = 0.0;\n    return result;\n  }\n  projectedPosition /= projectedPosition.w;\n\n  // cov2d = [a  b]  <-- ASCII 2D matrix\n  //         [b  c]\n  let cov2d = sigmaPrimCov2d(g.worldPos.xyz, g.scale.xyz, g.rot);\n  let a = cov2d[0][0];\n  let b = cov2d[0][1];\n  let c = cov2d[1][1];\n\n  let eigenvalues = calcEigenvalues(a, b, c);\n  let lambda1 = eigenvalues.x;\n  let lambda2 = eigenvalues.y;\n  \n  // Use eigenvectors to calc major/minor axis\n  // https://www.sctheblog.com/blog/gaussian-splatting/#vertex-shader-eigenvectors\n  let diagonalVector = normalize(vec2(1, (-a+b+lambda1) / (b-c+lambda1) ));\n  let diagonalVectorOther = vec2(diagonalVector.y, -diagonalVector.x);\n  let majorAxis = min(3 * sqrt(lambda1), 1024) * diagonalVector;\n  let minorAxis = min(3 * sqrt(lambda2), 1024) * diagonalVectorOther;\n  var projectedPosition2D = projectedPosition.xy; // WGSL..\n  projectedPosition2D += g.quadOffset.x * majorAxis / viewport \n                       + g.quadOffset.y * minorAxis / viewport;\n  result.position = vec4<f32>(projectedPosition2D, 0.0, 1.0);\n  result.quadOffset = g.quadOffset;\n\n  // finish\n  result.splatColor = g.color;\n  return result;\n}\n\n@fragment\nfn fs_mainEigenvectors(fragIn: VertexOutputEigenvectors) -> @location(0) vec4<f32> {\n  // \"3D Gaussian Splatting for Real-Time Radiance Field Rendering\"\n  // $\\alpha_i$ in eq.3 in \n  // $\\alpha_j$ is done through blending mode during rendering\n  let opacity = fragIn.splatColor.w;\n\n  // https://www.sctheblog.com/blog/gaussian-splatting/#fragment-shader\n  // this is for circle, but our vertices projected it into an ellipsis\n  let r = dot(fragIn.quadOffset, fragIn.quadOffset);\n  if (r > 1.0){ discard; }\n  // \"The exponential function in (9) can now be written as $e^{\u22120.5*r}$\",\n  // where (9) is a definition for:\n  // \"We define an elliptical Gaussian Gv(x \u2212 p) centered at a point p with a variance matrix V as:\"\n  let Gv = exp(-0.5 * r);\n  let a = Gv * opacity;\n  return vec4(a * fragIn.splatColor.rgb, a);\n}\n\n\n\n///////////////////////////\n/// Square billboard version\n/// https://www.sctheblog.com/blog/gaussian-splatting/#method-1-project-gaussian-to-a-square\n\nstruct VertexOutputSquare {\n  @builtin(position) position: vec4<f32>,\n  @location(0) splatColor: vec4<f32>,\n  @location(1) uv: vec2<f32>,\n  @location(2) conic: vec4<f32>,\n};\n\n@vertex\nfn vs_mainSquare(\n  @builtin(vertex_index) in_vertex_index: u32,\n) -> VertexOutputSquare {\n  var result: VertexOutputSquare;\n  let g = readGaussian(in_vertex_index);\n  let viewportWidth = _uniforms.viewportAndFocals[0];\n  let viewportHeight =_uniforms.viewportAndFocals[1];\n\n  // projection\n  var projectedPosition = _uniforms.mvpMatrix * g.worldPos;\n  if (checkIsCulled(projectedPosition)) {\n    result.splatColor.w = 0.0;\n    return result;\n  }\n  projectedPosition /= projectedPosition.w;\n\n  // cov2d = [a  b]  <-- ASCII 2D matrix\n  //         [b  c]\n  let cov2d = sigmaPrimCov2d(g.worldPos.xyz, g.scale.xyz, g.rot);\n  let a = cov2d[0][0];\n  let b = cov2d[0][1];\n  let c = cov2d[1][1];\n\n  let eigenvalues = calcEigenvalues(a, b, c);\n  let lambda1 = eigenvalues.x;\n  let lambda2 = eigenvalues.y;\n\n  // Rendering as square (based on tiled) (draft)\n  // This is slighly adopted as I'm not using the tiles\n  // Uses max(\u03BB1, \u03BB2) as a radius to 'spread' the billboard vertices.\n  // https://www.sctheblog.com/blog/gaussian-splatting/#calculate-tiles\n  let radiusPx = ceil(3. * sqrt(max(lambda1, lambda2)));\n  let radiusNdc = vec2<f32>(\n    // This magic 2.0 is the reason why this mode is experimental (although it works).\n    // Not sure which value is incorrect, the math seems ok. Maybe focal?\n    2.0 * radiusPx / viewportWidth,\n    2.0 * radiusPx / viewportHeight\n  );\n  result.position = vec4<f32>(projectedPosition.xy + radiusNdc * g.quadOffset, projectedPosition.zw);\n  result.uv = radiusPx * g.quadOffset; // in pixels!\n\n  // conic (inverse of cov2d)\n  let det = a * c - b * b; // https://www.w3.org/TR/WGSL/#determinant-builtin\n  let conic = vec3<f32>(c / det, -b / det, a / det);\n  result.conic = vec4<f32>(conic, 0.0);\n\n  // finish\n  result.splatColor = g.color;\n  return result;\n}\n\n@fragment\nfn fs_mainSquare(fragIn: VertexOutputSquare) -> @location(0) vec4<f32> {\n  let opacity = fragIn.splatColor.w;\n\n  // Rendering as square (based on tiled) (draft)\n  // https://www.sctheblog.com/blog/gaussian-splatting/#calculate-tiles\n  let d = -fragIn.uv; // quadOffset in pixels\n  let conic = fragIn.conic.xyz; // [0][0], [0][1] and [1][0], [1],[1]\n  let power = -0.5 * (\n    conic.x * d.x * d.x +\n    conic.z * d.y * d.y\n    ) - conic.y * d.x * d.y;\n\n  if (power > 0.0) { discard; }\n\n  // Eq. (2) from 3D Gaussian splatting paper.\n  // Obtain alpha by multiplying with Gaussian opacity\n  // and its exponential falloff from mean.\n  let alpha = min(0.99, opacity * exp(power));\n  return vec4<f32>(fragIn.splatColor.xyz * alpha, alpha);\n}\n", "struct Uniforms {\n    j: u32,\n    k: u32,\n};\n\n@group(0) @binding(0)\nvar<storage, read_write> _indicesBuffer: array<u32>;\n\n@group(0) @binding(1)\nvar<storage, read_write> _distancesBuffer: array<f32>;\n\n@group(0) @binding(2)\nvar<uniform> uniforms: Uniforms;\n\n\n// https://en.wikipedia.org/wiki/Bitonic_sorter\n@compute\n@workgroup_size(__WORKGROUP_SIZE__) // TODO?\nfn main(\n  @builtin(global_invocation_id) global_id: vec3<u32>, // [0,1,2,3, ..., WORKGROUP.xyz]\n) {\n    let itemsPerThread = u32(__ITEMS_PER_THREAD__);\n    let startIdx = global_id.x * itemsPerThread;\n    let endIdx = (global_id.x + 1) * itemsPerThread;\n    let j = uniforms.j;\n    let k = uniforms.k;\n\n    // Single dispatch impossible, lack of global barriers in WGSL\n    // https://stackoverflow.com/questions/72035548/what-does-storagebarrier-in-webgpu-actually-do\n    // let elementCount = 524288u;\n    // for (var k = 2u; k <= elementCount; k <<= 1u) {\n    // for (var j = k >> 1u; j > 0u; j >>= 1u) {\n\n    for (var i = startIdx; i < endIdx; i++ ) {\n        let i_XOR_j = i ^ j; // WIKIPEDIA: this is 'l' on wikipedia\n        if (i_XOR_j <= i) {\n            continue;\n        }\n        let swap0 = (i & k) == 0 && _distancesBuffer[i] > _distancesBuffer[i_XOR_j];\n        let swap1 = (i & k) != 0 && _distancesBuffer[i] < _distancesBuffer[i_XOR_j];\n        if (swap0 || swap1) {\n            // WIKIPEDIA: swap the elements arr[i] and arr[i_XOR_j]\n            let tmp0 = _distancesBuffer[i];\n            _distancesBuffer[i] = _distancesBuffer[i_XOR_j];\n            _distancesBuffer[i_XOR_j] = tmp0;\n            \n            let tmp1 = _indicesBuffer[i];\n            _indicesBuffer[i] = _indicesBuffer[i_XOR_j];\n            _indicesBuffer[i_XOR_j] = tmp1;\n        }\n    }\n\n    // workgroupBarrier(); // barriers snippet\n    // storageBarrier();\n    // }}\n}\n", "@group(0) @binding(0)\nvar<storage, read> _splatPositions: array<vec4f>;\n\n@group(0) @binding(1)\nvar<storage, read_write> _distancesBuffer: array<f32>;\n\n@group(0) @binding(2)\nvar<storage, read_write> _indicesBuffer: array<u32>;\n\n@group(0) @binding(3)\nvar<uniform> _mvpMatrix: mat4x4<f32>;\n\n@compute\n@workgroup_size(1) // TODO?\nfn main(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n    let splatCount = u32(__SPLAT_COUNT__);\n    let itemsPerThread = u32(__ITEMS_PER_THREAD__);\n    let startIdx = global_id.x * itemsPerThread;\n    let endIdx = (global_id.x + 1u) * itemsPerThread;\n\n    for (var i = startIdx; i < endIdx; i++ ) {\n         if (i >= splatCount) {\n            _distancesBuffer[i] = 999999.9f;\n        } else {\n            let pos = _splatPositions[i];\n            let projPos = _mvpMatrix * pos;\n            _distancesBuffer[i] = projPos.z;\n            _indicesBuffer[i] = i;\n        }\n    }\n}\n\n", "@group(0) @binding(0)\nvar<storage, read> _indicesBuffer: array<u32>;\n\n@group(0) @binding(1)\nvar<storage, read_write> _unrolledIndices: array<u32>;\n\n@compute\n@workgroup_size(1) // TODO?\nfn main(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n    let itemsPerThread = u32(__ITEMS_PER_THREAD__);\n    let startIdx = global_id.x * itemsPerThread;\n    let endIdx = (global_id.x + 1u) * itemsPerThread;\n    let verticesPerSplat = u32(__VERTICES_PER_SPLAT__);\n\n    for (var i = startIdx; i < endIdx; i++) {\n        let idx = _indicesBuffer[i];\n        for (var j = 0u; j < verticesPerSplat; j++) {\n            _unrolledIndices[i * verticesPerSplat + j] = idx * verticesPerSplat + j;\n        }\n    }\n}", "import { createErrorSystem, createGpuDevice } from './utils.ts';\nimport { createInputHandler } from './web/input.ts';\nimport { Renderer, injectShaderTexts } from './renderer.ts';\nimport { parseFileSplat } from './loaders/fileSplat.ts';\nimport { initFPSCounter } from './web/fpsStats.ts';\nimport { initializeGUI, onGpuProfilerResult } from './web/gui.ts';\nimport { GpuProfiler } from './gpuProfiler.ts';\nimport { initCanvasResizeSystem } from './web/cavasResize.ts';\n\n//@ts-ignore it works OK\nimport splatPassShader from './passes/renderSplatsGEO.wgsl';\n//@ts-ignore it works OK\nimport sortBitonicShader from './passes/sortPassGPU/bitonicSort.wgsl';\n//@ts-ignore it works OK\nimport sortCalcDeptsShader from './passes/sortPassGPU/calcDepths.wgsl';\n//@ts-ignore it works OK\nimport sortUnrollIndicesShader from './passes/sortPassGPU/unrollIndices.wgsl';\n\nconst SPLAT_FILE = 'nike.splat';\n\n// fix some warnings if VSCode is in deno mode\ndeclare global {\n  // deno-lint-ignore no-explicit-any\n  function requestAnimationFrame(cb: any): void;\n  // deno-lint-ignore no-explicit-any\n  type HTMLCanvasElement = any;\n  // deno-lint-ignore no-explicit-any\n  type CanvasRenderingContext2D = any;\n  // deno-lint-ignore no-explicit-any\n  const document: any;\n}\n\n(async function () {\n  // GPUDevice\n  const device = await createGpuDevice();\n  if (!device) {\n    showErrorMessage();\n    return;\n  }\n  const errorSystem = createErrorSystem(device);\n  errorSystem.startErrorScope('init');\n\n  // create canvas\n  const PREFERRED_CANVAS_FORMAT = navigator.gpu.getPreferredCanvasFormat();\n  const [canvas, canvasContext] = getCanvasContext(\n    '#gpuCanvas',\n    device,\n    PREFERRED_CANVAS_FORMAT\n  );\n  const canvasSize = initCanvasResizeSystem(canvas);\n\n  // input\n  const getInputState = createInputHandler(window, canvas);\n\n  // file load\n  const splats = await loadScene(device, SPLAT_FILE);\n\n  // renderer setup\n  const profiler = new GpuProfiler(device);\n  injectShaderTexts({\n    splatPassShader,\n    sortBitonicShader,\n    sortCalcDeptsShader,\n    sortUnrollIndicesShader,\n  });\n  const renderer = new Renderer(\n    device,\n    canvasSize.getViewportSize(),\n    PREFERRED_CANVAS_FORMAT,\n    splats\n  );\n  canvasSize.addListener(renderer.onCanvasResize);\n\n  initializeGUI(profiler);\n  const [fpsOnFrameStart, fpsOnFrameEnd] = initFPSCounter();\n  let lastFrameMS = Date.now();\n  let done = false;\n\n  const lastError = await errorSystem.reportErrorScopeAsync();\n  if (lastError) {\n    showErrorMessage(lastError);\n    return;\n  }\n\n  // frame callback\n  const frame = () => {\n    errorSystem.startErrorScope('frame');\n\n    fpsOnFrameEnd();\n    fpsOnFrameStart();\n    profiler.beginFrame();\n    const now = Date.now();\n    const deltaTime = (now - lastFrameMS) / 1000;\n    lastFrameMS = now;\n\n    canvasSize.revalidateCanvasSize();\n\n    const inputState = getInputState();\n    renderer.updateCamera(deltaTime, inputState);\n\n    // record commands\n    const cmdBuf = device.createCommandEncoder({\n      label: 'main-frame-cmd-buffer',\n    });\n    renderer.cmdRender(\n      {\n        cmdBuf,\n        device,\n        profiler,\n        splats,\n        viewport: canvasSize.getViewportSize(),\n      },\n      canvasContext.getCurrentTexture()\n    );\n\n    // submit commands\n    profiler.endFrame(cmdBuf);\n    device.queue.submit([cmdBuf.finish()]);\n\n    profiler.scheduleRaportIfNeededAsync(onGpuProfilerResult);\n\n    // frame end\n    if (!done) {\n      errorSystem.reportErrorScopeAsync((lastError) => {\n        showErrorMessage(lastError);\n        done = true;\n        throw new Error(lastError);\n      }); // not awaited!\n\n      requestAnimationFrame(frame);\n    }\n  };\n\n  // start rendering\n  requestAnimationFrame(frame);\n})();\n\nfunction getCanvasContext(\n  selector: string,\n  device: GPUDevice,\n  canvasFormat: string\n): [HTMLCanvasElement, CanvasRenderingContext2D] {\n  const canvas = document.querySelector(selector);\n  const context = canvas.getContext('webgpu');\n\n  // const devicePixelRatio = window.devicePixelRatio;\n  // canvas.width = canvas.clientWidth * devicePixelRatio;\n  // canvas.height = canvas.clientHeight * devicePixelRatio;\n\n  context.configure({\n    device,\n    format: canvasFormat,\n    alphaMode: 'premultiplied',\n  });\n  return [canvas, context];\n}\n\nasync function requestBinaryFile(path: string): Promise<ArrayBuffer> {\n  const resp = await fetch(path);\n  if (!resp.ok) {\n    throw `Could not download tfx file '${path}'`;\n  }\n  return await resp.arrayBuffer();\n}\n\nasync function loadScene(device: GPUDevice, path: string) {\n  const rawBytesArray = await requestBinaryFile(path);\n  const rawBytesArrayUints = new Uint8Array(rawBytesArray);\n  const splats = parseFileSplat(device, rawBytesArrayUints);\n  console.log('Parsed file', splats.count, 'splats');\n  return splats;\n}\n\nfunction showErrorMessage(msg?: string) {\n  document.getElementById('gpuCanvas').style.display = 'none';\n  document.getElementById('no-webgpu').style.display = 'flex';\n  if (msg) {\n    document.getElementById('error-msg').textContent = msg;\n  }\n}\n"],
  "mappings": "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",
  "names": ["EPSILON", "VecType", "create", "x", "y", "z", "dst", "VecType", "ctorMap", "newMat3", "subtract", "a", "b", "dst", "VecType", "cross", "a", "b", "dst", "VecType", "t1", "t2", "normalize", "v", "dst", "VecType", "v0", "v1", "v2", "len", "MatType", "setDefaultType", "ctor", "oldType", "create", "v0", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "dst", "set", "fromMat3", "m3", "fromQuat", "q", "x", "y", "z", "w", "x2", "y2", "z2", "xx", "yx", "yy", "zx", "zy", "zz", "wx", "wy", "wz", "negate", "m", "copy", "clone", "equalsApproximately", "a", "b", "utils.EPSILON", "equals", "identity", "transpose", "t", "m00", "m01", "m02", "m03", "m10", "m11", "m12", "m13", "m20", "m21", "m22", "m23", "m30", "m31", "m32", "m33", "inverse", "tmp0", "tmp1", "tmp2", "tmp3", "tmp4", "tmp5", "tmp6", "tmp7", "tmp8", "tmp9", "tmp10", "tmp11", "tmp12", "tmp13", "tmp14", "tmp15", "tmp16", "tmp17", "tmp18", "tmp19", "tmp20", "tmp21", "tmp22", "tmp23", "t0", "t1", "t2", "t3", "d", "determinant", "invert", "multiply", "a00", "a01", "a02", "a03", "a10", "a11", "a12", "a13", "a20", "a21", "a22", "a23", "a30", "a31", "a32", "a33", "b00", "b01", "b02", "b03", "b10", "b11", "b12", "b13", "b20", "b21", "b22", "b23", "b30", "b31", "b32", "b33", "mul", "setTranslation", "v", "getTranslation", "vec3.create", "getAxis", "axis", "off", "setAxis", "getScaling", "xy", "xz", "yz", "perspective", "fieldOfViewYInRadians", "aspect", "zNear", "zFar", "f", "rangeInv", "perspectiveReverseZ", "ortho", "left", "right", "bottom", "top", "near", "far", "frustum", "dx", "dy", "dz", "frustumReverseZ", "xAxis", "yAxis", "zAxis", "aim", "position", "target", "up", "vec3.normalize", "vec3.subtract", "vec3.cross", "cameraAim", "eye", "lookAt", "translation", "translate", "rotationX", "angleInRadians", "c", "s", "rotateX", "rotationY", "rotateY", "rotationZ", "rotateZ", "axisRotation", "n", "oneMinusCosine", "rotation", "axisRotate", "r00", "r01", "r02", "r10", "r11", "r12", "r20", "r21", "r22", "rotate", "scaling", "scale", "uniformScaling", "uniformScale", "CAMERA_CFG", "BYTES_U8", "BYTES_F32", "BYTES_U32", "BYTES_U64", "BYTES_VEC4", "BYTES_MAT4", "CONFIG", "createGpuDevice", "adapter", "onError", "msg", "canTimestamp", "requiredFeatures", "device", "e", "dgr2rad", "dgr", "createCameraProjectionMat", "viewportSize", "aspectRatio", "mat4Impl", "CAMERA_CFG", "getModelViewProjectionMatrix", "viewMat", "projMat", "GPU_BUFFER_USAGE_UNIFORM", "createGPUBuffer", "device", "label", "usage", "data", "gpuBuffer", "writeMatrixToGPUBuffer", "offsetBytes", "f32Arr", "makeUint", "x", "y", "z", "w", "a", "b", "c", "d", "nearestPowerOf2_floor", "nearestPowerOf2_ceil", "floor", "createArray", "len", "calcDepth", "mvp", "pointsVec4", "pointsOffset", "assertHasInjectedShader", "clazz", "applyShaderTextReplace", "text", "overrides", "code", "k", "v", "getItemsPerThread", "items", "threads", "lerp", "a", "b", "fac", "createErrorSystem", "device", "ERROR_SCOPES", "ERROR_SCOPES_REV", "currentScopeName", "startErrorScope", "reportErrorScopeAsync", "scopeName", "sc", "cb", "lastError", "name", "err", "msg", "Key", "createInputHandler", "window", "canvas", "directions", "mouse", "setDigital", "e", "value", "Key", "out", "RenderUniformsBuffer", "_RenderUniformsBuffer", "BYTES_MAT4", "BYTES_VEC4", "device", "GPU_BUFFER_USAGE_UNIFORM", "bindingIdx", "ctx", "mvpMatrix", "viewMatrix", "projMatrix", "viewport", "focalX", "focalY", "offsetBytes", "writeMatrixToGPUBuffer", "miscF32Array", "CONFIG", "SPLAT_SIZE_BYTES", "BYTES_F32", "BYTES_U8", "VERTICES_PER_SPLAT", "VERTEX_ATTRIBUTES", "UNIFORMS_DESC", "RenderUniformsBuffer", "RenderSplatsGEO", "_RenderSplatsGEO", "device", "outTextureFormat", "uniforms", "splats", "assertHasInjectedShader", "shaderModule", "pipelineLayout", "vertexShaderEntryPoint", "fragmentShaderEntryPoint", "uniformsLayout", "ctx", "targetTexture", "loadOp", "cmdBuf", "profiler", "renderPass", "CONFIG", "pipeline", "vertexCount", "VERTICES_PER_SPLAT", "BitonicSort", "_BitonicSort", "device", "itemCountCeilPwr2", "indicesBuffer", "distancesBuffer", "assertHasInjectedShader", "itemsPerThread", "getItemsPerThread", "uniformBuffer", "code", "applyShaderTextReplace", "shaderModule", "ctx", "cmdBuf", "profiler", "uniformBindGroup", "computePass", "elementCount", "uniformBuffers", "k", "j", "bufferContent", "gpuBuffer", "createGPUBuffer", "GPU_BUFFER_USAGE_UNIFORM", "computePipeline", "uniformsBuffer", "CalcDepthsPass", "_CalcDepthsPass", "device", "splatPositions", "distancesBuffer", "indicesBuffer", "assertHasInjectedShader", "splatCount", "BYTES_VEC4", "itemsPerThread", "getItemsPerThread", "BYTES_MAT4", "GPU_BUFFER_USAGE_UNIFORM", "code", "applyShaderTextReplace", "shaderModule", "ctx", "cmdBuf", "mvpMatrix", "profiler", "writeMatrixToGPUBuffer", "computePass", "UnrollIndicesPass", "_UnrollIndicesPass", "device", "indicesBuffer", "unrolledIndicesBuffer", "splatCount", "assertHasInjectedShader", "itemsPerThread", "getItemsPerThread", "code", "applyShaderTextReplace", "VERTICES_PER_SPLAT", "shaderModule", "ctx", "cmdBuf", "profiler", "computePass", "SortPassGPU", "_SortPassGPU", "device", "splats", "nearestPowerOf2_ceil", "indicesBuffer", "distancesBuffer", "CalcDepthsPass", "BitonicSort", "UnrollIndicesPass", "itemCountCeilPwr2", "BYTES_U32", "BYTES_F32", "ctx", "DEPTH_MUL", "SORTING_BINS_COUNT", "SortPassCPU", "_SortPassCPU", "splats", "splatCount", "VERTICES_PER_SPLAT", "ctx", "device", "mvpMatrix", "profiler", "profilerScope", "minDepth", "maxDepth", "depthPerBin", "splatCountPerBin", "i", "binIdx", "starts0", "unrollSortedSplatIndices", "writeUnrolledIndicesToGpu", "depth", "calcDepth", "indices", "unrolledIndicesArray", "idx", "j", "CODE", "DrawGroundPass", "_DrawGroundPass", "device", "outTextureFormat", "uniforms", "shaderModule", "uniformsLayout", "ctx", "targetTexture", "cmdBuf", "profiler", "renderPass", "CONFIG", "UP", "Camera2", "options", "CAMERA_CFG", "mat4Impl", "x", "y", "z", "viewInv", "deltaTime", "input", "sign", "positive", "negative", "m", "CONFIG", "digital", "deltaRight", "deltaUp", "deltaBack", "yaw", "pitch", "mod", "clamp", "min", "max", "div", "SortPassCPU_Naive", "_SortPassCPU_Naive", "splats", "splatCount", "createArray", "_", "VERTICES_PER_SPLAT", "ctx", "device", "mvpMatrix", "profiler", "profilerScope", "e", "idx", "calcDepth", "a", "b", "unrollSortedSplatIndices", "writeUnrolledIndicesToGpu", "injectShaderTexts", "texts", "RenderSplatsGEO", "BitonicSort", "CalcDepthsPass", "UnrollIndicesPass", "Renderer", "device", "viewportSize", "preferredCanvasFormat", "splats", "RenderUniformsBuffer", "SortPassGPU", "SortPassCPU", "SortPassCPU_Naive", "DrawGroundPass", "Camera2", "CAMERA_CFG", "createCameraProjectionMat", "deltaTime", "input", "_ctx", "targetTexture", "viewMatrix", "mvpMatrix", "getModelViewProjectionMatrix", "ctx", "CONFIG", "splatsLoadOp", "OFFSET_SCALE", "BYTES_F32", "OFFSET_COLOR", "OFFSET_ROTATION", "BYTES_U8", "offsetBytesToOffsetF32", "e", "parseFileSplat", "device", "data", "splatCount", "SPLAT_SIZE_BYTES", "dataF32", "positions", "scales", "rotations", "colors", "i", "offsetBytes", "offsetBytesIntoF32", "offsetScaleF32", "r", "x", "makeUint", "printPositionsStats", "usage", "positionsBuffer", "createGPUBuffer", "rotationsBuffer", "scalesBuffer", "colorsBuffer", "indicesBuffer", "VERTICES_PER_SPLAT", "BYTES_U32", "maxCo", "minCo", "offset", "co", "p", "a", "DELTA_SMOOTHING", "UPDATE_FREQ_MS", "initFPSCounter", "parentEl", "fpsEl", "msEl", "frameStart", "smoothDelta", "lastDOMUpdate", "frameEnd", "deltaMs", "lerp", "updateDOM", "fps", "colorToString", "color", "forceCSSHex", "colorFormat", "__state", "conversionName", "toString", "r", "Math", "round", "g", "b", "a", "h", "s", "toFixed", "v", "str", "hex", "length", "ARR_EACH", "Array", "prototype", "forEach", "ARR_SLICE", "slice", "Common", "target", "each", "call", "arguments", "obj", "keys", "isObject", "Object", "key", "isUndefined", "bind", "toCall", "args", "i", "apply", "itr", "scope", "l", "BREAK", "fnc", "func", "threshold", "callImmediately", "timeout", "delayed", "callNow", "setTimeout", "toArray", "undefined", "isNaN", "isArray", "constructor", "Function", "INTERPRETATIONS", "common", "isString", "original", "test", "match", "parseInt", "parseFloat", "isNumber", "result", "toReturn", "interpret", "family", "litmus", "conversions", "conversion", "read", "tmpComponent", "ColorMath", "hi", "floor", "f", "p", "q", "t", "c", "min", "max", "delta", "NaN", "hex_with_component", "componentIndex", "value", "Color", "Error", "write", "defineRGBComponent", "component", "componentHexIndex", "defineProperty", "space", "recalculateRGB", "defineHSVComponent", "recalculateHSV", "math", "component_from_hex", "extend", "hsv_to_rgb", "rgb_to_hsv", "COMPONENTS", "rgb_to_hex", "Controller", "object", "property", "initialValue", "domElement", "document", "createElement", "__onChange", "__onFinishChange", "newValue", "updateDisplay", "getValue", "EVENT_MAP", "EVENT_MAP_INV", "k", "e", "CSS_VALUE_PIXELS", "cssValueToPixels", "val", "isNull", "dom", "elem", "selectable", "style", "onselectstart", "MozUserSelect", "KhtmlUserSelect", "unselectable", "hor", "vert", "vertical", "horizontal", "position", "left", "right", "top", "bottom", "eventType", "pars", "aux", "params", "className", "evt", "createEvent", "clientX", "x", "clientY", "y", "initMouseEvent", "bubbles", "cancelable", "window", "clickCount", "init", "initKeyboardEvent", "initKeyEvent", "defaults", "ctrlKey", "altKey", "shiftKey", "metaKey", "keyCode", "charCode", "initEvent", "dispatchEvent", "event", "newBool", "bool", "addEventListener", "attachEvent", "removeEventListener", "detachEvent", "classes", "split", "indexOf", "push", "join", "replace", "removeAttribute", "index", "splice", "RegExp", "getComputedStyle", "width", "height", "el", "offset", "offsetParent", "offsetLeft", "offsetTop", "activeElement", "type", "href", "BooleanController", "_this", "__prev", "_this2", "__checkbox", "setAttribute", "onChange", "setValue", "appendChild", "checked", "OptionController", "opts", "options", "__select", "map", "element", "opt", "innerHTML", "desiredValue", "selectedIndex", "isActive", "StringController", "__input", "onBlur", "blur", "numDecimals", "_x", "NumberController", "_params", "__min", "__max", "__step", "step", "__impliedStep", "pow", "log", "abs", "LN10", "__precision", "_v", "minValue", "maxValue", "stepValue", "roundToDecimal", "decimals", "tenTo", "NumberControllerBox", "__truncationSuspended", "prevY", "attempted", "onFinish", "onMouseDrag", "diff", "onMouseUp", "unbind", "onMouseDown", "i1", "i2", "o1", "o2", "NumberControllerSlider", "__background", "__foreground", "onTouchStart", "addClass", "preventDefault", "bgRect", "getBoundingClientRect", "touches", "onTouchMove", "onTouchEnd", "pct", "FunctionController", "text", "__button", "fire", "ColorController", "__color", "__temp", "makeSelectable", "__selector", "__saturation_field", "__field_knob", "__field_knob_border", "__hue_knob", "__hue_field", "__input_textShadow", "removeClass", "valueField", "fieldDown", "fieldDownH", "setSV", "fieldUpSV", "setH", "fieldUpH", "toOriginal", "fieldRect", "_ref", "_ref2", "mismatch", "flip", "_flip", "toHexString", "marginTop", "vendors", "linearGradient", "background", "vendor", "cssText", "hueGradient", "css", "url", "indoc", "doc", "link", "rel", "getElementsByTagName", "cssContent", "injected", "head", "saveDialogContents", "ControllerFactory", "isFunction", "isBoolean", "requestAnimationFrame", "callback", "requestAnimationFrame$1", "webkitRequestAnimationFrame", "mozRequestAnimationFrame", "oRequestAnimationFrame", "msRequestAnimationFrame", "CenteredDiv", "backgroundElement", "makeFullscreen", "body", "hide", "display", "opacity", "webkitTransform", "layout", "defer", "innerWidth", "getWidth", "innerHeight", "getHeight", "inject", "styleSheet", "CSS_NAMESPACE", "HIDE_KEY_CODE", "CLOSE_BUTTON_HEIGHT", "DEFAULT_DEFAULT_PRESET_NAME", "SUPPORTS_LOCAL_STORAGE", "localStorage", "SAVE_DIALOGUE", "autoPlaceVirgin", "autoPlaceContainer", "hideableGuis", "GUI", "__ul", "__folders", "__controllers", "__rememberedObjects", "__rememberedObjectIndecesToControllers", "__listening", "DEFAULT_WIDTH", "autoPlace", "load", "preset", "parent", "hideable", "resizable", "scrollable", "useLocalStorage", "getItem", "getLocalStorageHash", "saveToLocalStorage", "titleRow", "defineProperties", "closeOnTop", "getRoot", "revert", "name", "closed", "CLASS_CLOSED", "onResize", "__closeButton", "TEXT_OPEN", "TEXT_CLOSED", "setItem", "CLASS_MAIN", "savedGui", "JSON", "parse", "CLASS_CLOSE_BUTTON", "CLASS_CLOSE_TOP", "insertBefore", "childNodes", "CLASS_CLOSE_BOTTOM", "titleRowName", "createTextNode", "addRow", "onClickTitle", "CLASS_AUTO_PLACE_CONTAINER", "CLASS_AUTO_PLACE", "__resizeHandler", "onResizeDebounced", "stringify", "getSaveObject", "saveToLocalStorageIfPossible", "resetWidth", "root", "toggleHide", "gui", "CLASS_CONTROLLER_ROW", "CLASS_TOO_TALL", "CLASS_DRAG", "_keydownHandler", "which", "add", "controller", "removeChild", "__li", "subfolder", "removeFolder", "newGuiParams", "folders", "li", "folder", "parentElement", "getOffset", "node", "__save_row", "__resize_handle", "offsetHeight", "debounce", "saveDialogueContents", "remembered", "getCurrentPreset", "presetName", "newDom", "liBefore", "removeListeners", "markPresetModified", "modified", "__preset_select", "augmentController", "__gui", "nextSibling", "nextElementSibling", "remove", "firstElementChild", "listen", "box", "method", "pc", "pb", "returned", "oldName", "wasListening", "newController", "compose", "fakeEvent", "stopPropagation", "borderLeftColor", "isModified", "recallSavedValue", "matchedIndex", "controllerMap", "presetMap", "factoryArgs", "concat", "before", "container", "_typeof", "location", "addPresetOption", "setSelected", "showHideExplain", "explain", "addSaveMenu", "div", "firstChild", "gears", "button", "button2", "button3", "select", "getElementById", "localStorageCheckBox", "saveLocally", "newConstructorTextArea", "show", "focus", "save", "prompt", "saveAs", "addResizeHandle", "pmouseX", "drag", "dragStop", "dragStart", "setWidth", "w", "useInitialValues", "savedValues", "setPresetSelectIndex", "updateDisplays", "controllerArray", "GUI", "GUIImport", "initializeGUI", "profiler", "gui", "GUI$1", "dummyObject", "CONFIG", "addColorController", "sortModeDummy", "createDummy", "renderModeDummy", "obj", "prop", "name", "dummy", "v", "a", "key", "opts", "e", "selectedLabel", "opt", "onGpuProfilerResult", "result", "parentEl", "mergeByName", "names", "timeMs", "t", "li", "NANO_TO_MILISECONDS", "MAX_QUERY_COUNT", "QUERIES_PER_PASS", "TOTAL_MAX_QUERIES", "GpuProfiler", "device", "BYTES_U64", "enabled", "cmdBuf", "queryCount", "onResult", "scopeNames", "times", "result", "name", "type", "cpuTime", "idx", "time", "start", "end", "queryId", "now", "token", "el", "_", "_2", "initCanvasResizeSystem", "canvas", "sizeNow", "getViewportSize", "listeners", "revalidateCanvasSize", "addListener", "f", "applyResize", "d", "l", "devicePixelRatio", "renderSplatsGEO_default", "bitonicSort_default", "calcDepths_default", "unrollIndices_default", "SPLAT_FILE", "device", "createGpuDevice", "showErrorMessage", "errorSystem", "createErrorSystem", "PREFERRED_CANVAS_FORMAT", "canvas", "canvasContext", "getCanvasContext", "canvasSize", "initCanvasResizeSystem", "getInputState", "createInputHandler", "splats", "loadScene", "profiler", "GpuProfiler", "injectShaderTexts", "renderSplatsGEO_default", "bitonicSort_default", "calcDepths_default", "unrollIndices_default", "renderer", "Renderer", "initializeGUI", "fpsOnFrameStart", "fpsOnFrameEnd", "initFPSCounter", "lastFrameMS", "done", "lastError", "frame", "now", "deltaTime", "inputState", "cmdBuf", "onGpuProfilerResult", "selector", "canvasFormat", "context", "requestBinaryFile", "path", "resp", "rawBytesArray", "rawBytesArrayUints", "parseFileSplat", "msg"]
}
